
main-nopic-noplt-nopie:     file format elf32-i386


Disassembly of section .interp:

080481b4 <.interp>:
 80481b4:	2f                   	das    
 80481b5:	6c                   	ins    BYTE PTR es:[edi],dx
 80481b6:	69 62 2f 6c 64 2d 6c 	imul   esp,DWORD PTR [edx+0x2f],0x6c2d646c
 80481bd:	69 6e 75 78 2e 73 6f 	imul   ebp,DWORD PTR [esi+0x75],0x6f732e78
 80481c4:	2e 32 00             	xor    al,BYTE PTR cs:[eax]

Disassembly of section .note.gnu.build-id:

080481c8 <.note.gnu.build-id>:
 80481c8:	04 00                	add    al,0x0
 80481ca:	00 00                	add    BYTE PTR [eax],al
 80481cc:	14 00                	adc    al,0x0
 80481ce:	00 00                	add    BYTE PTR [eax],al
 80481d0:	03 00                	add    eax,DWORD PTR [eax]
 80481d2:	00 00                	add    BYTE PTR [eax],al
 80481d4:	47                   	inc    edi
 80481d5:	4e                   	dec    esi
 80481d6:	55                   	push   ebp
 80481d7:	00 d5                	add    ch,dl
 80481d9:	3c 91                	cmp    al,0x91
 80481db:	f4                   	hlt    
 80481dc:	93                   	xchg   ebx,eax
 80481dd:	7a 77                	jp     8048256 <_init-0xdaa>
 80481df:	41                   	inc    ecx
 80481e0:	67 97                	addr16 xchg edi,eax
 80481e2:	bc 34 b8 51 70       	mov    esp,0x7051b834
 80481e7:	f3 fe                	repz (bad) 
 80481e9:	38 02                	cmp    BYTE PTR [edx],al
 80481eb:	e4                   	.byte 0xe4

Disassembly of section .note.gnu.property:

080481ec <.note.gnu.property>:
 80481ec:	04 00                	add    al,0x0
 80481ee:	00 00                	add    BYTE PTR [eax],al
 80481f0:	0c 00                	or     al,0x0
 80481f2:	00 00                	add    BYTE PTR [eax],al
 80481f4:	05 00 00 00 47       	add    eax,0x47000000
 80481f9:	4e                   	dec    esi
 80481fa:	55                   	push   ebp
 80481fb:	00 02                	add    BYTE PTR [edx],al
 80481fd:	00 00                	add    BYTE PTR [eax],al
 80481ff:	c0 04 00 00          	rol    BYTE PTR [eax+eax*1],0x0
 8048203:	00 03                	add    BYTE PTR [ebx],al
 8048205:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .note.ABI-tag:

08048208 <.note.ABI-tag>:
 8048208:	04 00                	add    al,0x0
 804820a:	00 00                	add    BYTE PTR [eax],al
 804820c:	10 00                	adc    BYTE PTR [eax],al
 804820e:	00 00                	add    BYTE PTR [eax],al
 8048210:	01 00                	add    DWORD PTR [eax],eax
 8048212:	00 00                	add    BYTE PTR [eax],al
 8048214:	47                   	inc    edi
 8048215:	4e                   	dec    esi
 8048216:	55                   	push   ebp
 8048217:	00 00                	add    BYTE PTR [eax],al
 8048219:	00 00                	add    BYTE PTR [eax],al
 804821b:	00 03                	add    BYTE PTR [ebx],al
 804821d:	00 00                	add    BYTE PTR [eax],al
 804821f:	00 02                	add    BYTE PTR [edx],al
 8048221:	00 00                	add    BYTE PTR [eax],al
 8048223:	00 00                	add    BYTE PTR [eax],al
 8048225:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .gnu.hash:

08048228 <.gnu.hash>:
 8048228:	02 00                	add    al,BYTE PTR [eax]
 804822a:	00 00                	add    BYTE PTR [eax],al
 804822c:	04 00                	add    al,0x0
 804822e:	00 00                	add    BYTE PTR [eax],al
 8048230:	01 00                	add    DWORD PTR [eax],eax
 8048232:	00 00                	add    BYTE PTR [eax],al
 8048234:	05 00 00 00 00       	add    eax,0x0
 8048239:	20 00                	and    BYTE PTR [eax],al
 804823b:	20 00                	and    BYTE PTR [eax],al
 804823d:	00 00                	add    BYTE PTR [eax],al
 804823f:	00 04 00             	add    BYTE PTR [eax+eax*1],al
 8048242:	00 00                	add    BYTE PTR [eax],al
 8048244:	ad                   	lods   eax,DWORD PTR ds:[esi]
 8048245:	4b                   	dec    ebx
 8048246:	e3 c0                	jecxz  8048208 <_init-0xdf8>

Disassembly of section .dynsym:

08048248 <.dynsym>:
	...
 8048258:	1a 00                	sbb    al,BYTE PTR [eax]
	...
 8048262:	00 00                	add    BYTE PTR [eax],al
 8048264:	12 00                	adc    al,BYTE PTR [eax]
 8048266:	00 00                	add    BYTE PTR [eax],al
 8048268:	3d 00 00 00 00       	cmp    eax,0x0
 804826d:	00 00                	add    BYTE PTR [eax],al
 804826f:	00 00                	add    BYTE PTR [eax],al
 8048271:	00 00                	add    BYTE PTR [eax],al
 8048273:	00 20                	add    BYTE PTR [eax],ah
 8048275:	00 00                	add    BYTE PTR [eax],al
 8048277:	00 21                	add    BYTE PTR [ecx],ah
	...
 8048281:	00 00                	add    BYTE PTR [eax],al
 8048283:	00 12                	add    BYTE PTR [edx],dl
 8048285:	00 00                	add    BYTE PTR [eax],al
 8048287:	00 0b                	add    BYTE PTR [ebx],cl
 8048289:	00 00                	add    BYTE PTR [eax],al
 804828b:	00 04 a0             	add    BYTE PTR [eax+eiz*4],al
 804828e:	04 08                	add    al,0x8
 8048290:	04 00                	add    al,0x0
 8048292:	00 00                	add    BYTE PTR [eax],al
 8048294:	11 00                	adc    DWORD PTR [eax],eax
 8048296:	11 00                	adc    DWORD PTR [eax],eax

Disassembly of section .dynstr:

08048298 <.dynstr>:
 8048298:	00 6c 69 62          	add    BYTE PTR [ecx+ebp*2+0x62],ch
 804829c:	63 2e                	arpl   WORD PTR [esi],bp
 804829e:	73 6f                	jae    804830f <_init-0xcf1>
 80482a0:	2e 36 00 5f 49       	cs add BYTE PTR ss:[edi+0x49],bl
 80482a5:	4f                   	dec    edi
 80482a6:	5f                   	pop    edi
 80482a7:	73 74                	jae    804831d <_init-0xce3>
 80482a9:	64 69 6e 5f 75 73 65 	imul   ebp,DWORD PTR fs:[esi+0x5f],0x64657375
 80482b0:	64 
 80482b1:	00 70 72             	add    BYTE PTR [eax+0x72],dh
 80482b4:	69 6e 74 66 00 5f 5f 	imul   ebp,DWORD PTR [esi+0x74],0x5f5f0066
 80482bb:	6c                   	ins    BYTE PTR es:[edi],dx
 80482bc:	69 62 63 5f 73 74 61 	imul   esp,DWORD PTR [edx+0x63],0x6174735f
 80482c3:	72 74                	jb     8048339 <_init-0xcc7>
 80482c5:	5f                   	pop    edi
 80482c6:	6d                   	ins    DWORD PTR es:[edi],dx
 80482c7:	61                   	popa   
 80482c8:	69 6e 00 47 4c 49 42 	imul   ebp,DWORD PTR [esi+0x0],0x42494c47
 80482cf:	43                   	inc    ebx
 80482d0:	5f                   	pop    edi
 80482d1:	32 2e                	xor    ch,BYTE PTR [esi]
 80482d3:	30 00                	xor    BYTE PTR [eax],al
 80482d5:	5f                   	pop    edi
 80482d6:	5f                   	pop    edi
 80482d7:	67 6d                	ins    DWORD PTR es:[di],dx
 80482d9:	6f                   	outs   dx,DWORD PTR ds:[esi]
 80482da:	6e                   	outs   dx,BYTE PTR ds:[esi]
 80482db:	5f                   	pop    edi
 80482dc:	73 74                	jae    8048352 <_init-0xcae>
 80482de:	61                   	popa   
 80482df:	72 74                	jb     8048355 <_init-0xcab>
 80482e1:	5f                   	pop    edi
 80482e2:	5f                   	pop    edi
	...

Disassembly of section .gnu.version:

080482e4 <.gnu.version>:
 80482e4:	00 00                	add    BYTE PTR [eax],al
 80482e6:	02 00                	add    al,BYTE PTR [eax]
 80482e8:	00 00                	add    BYTE PTR [eax],al
 80482ea:	02 00                	add    al,BYTE PTR [eax]
 80482ec:	01 00                	add    DWORD PTR [eax],eax

Disassembly of section .gnu.version_r:

080482f0 <.gnu.version_r>:
 80482f0:	01 00                	add    DWORD PTR [eax],eax
 80482f2:	01 00                	add    DWORD PTR [eax],eax
 80482f4:	01 00                	add    DWORD PTR [eax],eax
 80482f6:	00 00                	add    BYTE PTR [eax],al
 80482f8:	10 00                	adc    BYTE PTR [eax],al
 80482fa:	00 00                	add    BYTE PTR [eax],al
 80482fc:	00 00                	add    BYTE PTR [eax],al
 80482fe:	00 00                	add    BYTE PTR [eax],al
 8048300:	10 69 69             	adc    BYTE PTR [ecx+0x69],ch
 8048303:	0d 00 00 02 00       	or     eax,0x20000
 8048308:	33 00                	xor    eax,DWORD PTR [eax]
 804830a:	00 00                	add    BYTE PTR [eax],al
 804830c:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .rel.dyn:

08048310 <.rel.dyn>:
 8048310:	f8                   	clc    
 8048311:	bf 04 08 06 01       	mov    edi,0x1060804
 8048316:	00 00                	add    BYTE PTR [eax],al
 8048318:	fc                   	cld    
 8048319:	bf 04 08 06 02       	mov    edi,0x2060804
	...

Disassembly of section .rel.plt:

08048320 <.rel.plt>:
 8048320:	0c c0                	or     al,0xc0
 8048322:	04 08                	add    al,0x8
 8048324:	07                   	pop    es
 8048325:	03 00                	add    eax,DWORD PTR [eax]
	...

Disassembly of section .init:

08049000 <_init>:
 8049000:	f3 0f 1e fb          	endbr32 
 8049004:	53                   	push   ebx
 8049005:	83 ec 08             	sub    esp,0x8
 8049008:	e8 a3 00 00 00       	call   80490b0 <__x86.get_pc_thunk.bx>
 804900d:	81 c3 f3 2f 00 00    	add    ebx,0x2ff3
 8049013:	8b 83 fc ff ff ff    	mov    eax,DWORD PTR [ebx-0x4]
 8049019:	85 c0                	test   eax,eax
 804901b:	74 02                	je     804901f <_init+0x1f>
 804901d:	ff d0                	call   eax
 804901f:	83 c4 08             	add    esp,0x8
 8049022:	5b                   	pop    ebx
 8049023:	c3                   	ret    

Disassembly of section .plt:

08049030 <.plt>:
 8049030:	ff 35 04 c0 04 08    	push   DWORD PTR ds:0x804c004
 8049036:	ff 25 08 c0 04 08    	jmp    DWORD PTR ds:0x804c008
 804903c:	0f 1f 40 00          	nop    DWORD PTR [eax+0x0]
 8049040:	f3 0f 1e fb          	endbr32 
 8049044:	68 00 00 00 00       	push   0x0
 8049049:	e9 e2 ff ff ff       	jmp    8049030 <.plt>
 804904e:	66 90                	xchg   ax,ax

Disassembly of section .plt.sec:

08049050 <__libc_start_main@plt>:
 8049050:	f3 0f 1e fb          	endbr32 
 8049054:	ff 25 0c c0 04 08    	jmp    DWORD PTR ds:0x804c00c
 804905a:	66 0f 1f 44 00 00    	nop    WORD PTR [eax+eax*1+0x0]

Disassembly of section .text:

08049060 <_start>:
 8049060:	f3 0f 1e fb          	endbr32 
 8049064:	31 ed                	xor    ebp,ebp
 8049066:	5e                   	pop    esi
 8049067:	89 e1                	mov    ecx,esp
 8049069:	83 e4 f0             	and    esp,0xfffffff0
 804906c:	50                   	push   eax
 804906d:	54                   	push   esp
 804906e:	52                   	push   edx
 804906f:	e8 23 00 00 00       	call   8049097 <_start+0x37>
 8049074:	81 c3 8c 2f 00 00    	add    ebx,0x2f8c
 804907a:	8d 83 70 d2 ff ff    	lea    eax,[ebx-0x2d90]
 8049080:	50                   	push   eax
 8049081:	8d 83 00 d2 ff ff    	lea    eax,[ebx-0x2e00]
 8049087:	50                   	push   eax
 8049088:	51                   	push   ecx
 8049089:	56                   	push   esi
 804908a:	c7 c0 9c 91 04 08    	mov    eax,0x804919c
 8049090:	50                   	push   eax
 8049091:	e8 ba ff ff ff       	call   8049050 <__libc_start_main@plt>
 8049096:	f4                   	hlt    
 8049097:	8b 1c 24             	mov    ebx,DWORD PTR [esp]
 804909a:	c3                   	ret    
 804909b:	66 90                	xchg   ax,ax
 804909d:	66 90                	xchg   ax,ax
 804909f:	90                   	nop

080490a0 <_dl_relocate_static_pie>:
 80490a0:	f3 0f 1e fb          	endbr32 
 80490a4:	c3                   	ret    
 80490a5:	66 90                	xchg   ax,ax
 80490a7:	66 90                	xchg   ax,ax
 80490a9:	66 90                	xchg   ax,ax
 80490ab:	66 90                	xchg   ax,ax
 80490ad:	66 90                	xchg   ax,ax
 80490af:	90                   	nop

080490b0 <__x86.get_pc_thunk.bx>:
 80490b0:	8b 1c 24             	mov    ebx,DWORD PTR [esp]
 80490b3:	c3                   	ret    
 80490b4:	66 90                	xchg   ax,ax
 80490b6:	66 90                	xchg   ax,ax
 80490b8:	66 90                	xchg   ax,ax
 80490ba:	66 90                	xchg   ax,ax
 80490bc:	66 90                	xchg   ax,ax
 80490be:	66 90                	xchg   ax,ax

080490c0 <deregister_tm_clones>:
 80490c0:	b8 18 c0 04 08       	mov    eax,0x804c018
 80490c5:	3d 18 c0 04 08       	cmp    eax,0x804c018
 80490ca:	74 24                	je     80490f0 <deregister_tm_clones+0x30>
 80490cc:	b8 00 00 00 00       	mov    eax,0x0
 80490d1:	85 c0                	test   eax,eax
 80490d3:	74 1b                	je     80490f0 <deregister_tm_clones+0x30>
 80490d5:	55                   	push   ebp
 80490d6:	89 e5                	mov    ebp,esp
 80490d8:	83 ec 14             	sub    esp,0x14
 80490db:	68 18 c0 04 08       	push   0x804c018
 80490e0:	ff d0                	call   eax
 80490e2:	83 c4 10             	add    esp,0x10
 80490e5:	c9                   	leave  
 80490e6:	c3                   	ret    
 80490e7:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
 80490ee:	66 90                	xchg   ax,ax
 80490f0:	c3                   	ret    
 80490f1:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
 80490f8:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
 80490ff:	90                   	nop

08049100 <register_tm_clones>:
 8049100:	b8 18 c0 04 08       	mov    eax,0x804c018
 8049105:	2d 18 c0 04 08       	sub    eax,0x804c018
 804910a:	89 c2                	mov    edx,eax
 804910c:	c1 e8 1f             	shr    eax,0x1f
 804910f:	c1 fa 02             	sar    edx,0x2
 8049112:	01 d0                	add    eax,edx
 8049114:	d1 f8                	sar    eax,1
 8049116:	74 20                	je     8049138 <register_tm_clones+0x38>
 8049118:	ba 00 00 00 00       	mov    edx,0x0
 804911d:	85 d2                	test   edx,edx
 804911f:	74 17                	je     8049138 <register_tm_clones+0x38>
 8049121:	55                   	push   ebp
 8049122:	89 e5                	mov    ebp,esp
 8049124:	83 ec 10             	sub    esp,0x10
 8049127:	50                   	push   eax
 8049128:	68 18 c0 04 08       	push   0x804c018
 804912d:	ff d2                	call   edx
 804912f:	83 c4 10             	add    esp,0x10
 8049132:	c9                   	leave  
 8049133:	c3                   	ret    
 8049134:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
 8049138:	c3                   	ret    
 8049139:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]

08049140 <__do_global_dtors_aux>:
 8049140:	f3 0f 1e fb          	endbr32 
 8049144:	80 3d 18 c0 04 08 00 	cmp    BYTE PTR ds:0x804c018,0x0
 804914b:	75 1b                	jne    8049168 <__do_global_dtors_aux+0x28>
 804914d:	55                   	push   ebp
 804914e:	89 e5                	mov    ebp,esp
 8049150:	83 ec 08             	sub    esp,0x8
 8049153:	e8 68 ff ff ff       	call   80490c0 <deregister_tm_clones>
 8049158:	c6 05 18 c0 04 08 01 	mov    BYTE PTR ds:0x804c018,0x1
 804915f:	c9                   	leave  
 8049160:	c3                   	ret    
 8049161:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
 8049168:	c3                   	ret    
 8049169:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]

08049170 <frame_dummy>:
 8049170:	f3 0f 1e fb          	endbr32 
 8049174:	eb 8a                	jmp    8049100 <register_tm_clones>

08049176 <inc>:
 8049176:	f3 0f 1e fb          	endbr32 
 804917a:	55                   	push   ebp
 804917b:	89 e5                	mov    ebp,esp
 804917d:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
 8049180:	83 c0 01             	add    eax,0x1
 8049183:	5d                   	pop    ebp
 8049184:	c3                   	ret    

08049185 <dec>:
 8049185:	f3 0f 1e fb          	endbr32 
 8049189:	55                   	push   ebp
 804918a:	89 e5                	mov    ebp,esp
 804918c:	ff 75 08             	push   DWORD PTR [ebp+0x8]
 804918f:	e8 e2 ff ff ff       	call   8049176 <inc>
 8049194:	83 c4 04             	add    esp,0x4
 8049197:	83 e8 01             	sub    eax,0x1
 804919a:	c9                   	leave  
 804919b:	c3                   	ret    

0804919c <main>:
 804919c:	f3 0f 1e fb          	endbr32 
 80491a0:	8d 4c 24 04          	lea    ecx,[esp+0x4]
 80491a4:	83 e4 f0             	and    esp,0xfffffff0
 80491a7:	ff 71 fc             	push   DWORD PTR [ecx-0x4]
 80491aa:	55                   	push   ebp
 80491ab:	89 e5                	mov    ebp,esp
 80491ad:	51                   	push   ecx
 80491ae:	83 ec 14             	sub    esp,0x14
 80491b1:	c7 45 f4 05 00 00 00 	mov    DWORD PTR [ebp-0xc],0x5
 80491b8:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
 80491bb:	e8 c5 ff ff ff       	call   8049185 <dec>
 80491c0:	83 c4 04             	add    esp,0x4
 80491c3:	a3 1c c0 04 08       	mov    ds:0x804c01c,eax
 80491c8:	a1 1c c0 04 08       	mov    eax,ds:0x804c01c
 80491cd:	50                   	push   eax
 80491ce:	e8 a3 ff ff ff       	call   8049176 <inc>
 80491d3:	83 c4 04             	add    esp,0x4
 80491d6:	a3 1c c0 04 08       	mov    ds:0x804c01c,eax
 80491db:	a1 1c c0 04 08       	mov    eax,ds:0x804c01c
 80491e0:	83 ec 08             	sub    esp,0x8
 80491e3:	50                   	push   eax
 80491e4:	68 08 a0 04 08       	push   0x804a008
 80491e9:	ff 15 f8 bf 04 08    	call   DWORD PTR ds:0x804bff8
 80491ef:	83 c4 10             	add    esp,0x10
 80491f2:	90                   	nop
 80491f3:	8b 4d fc             	mov    ecx,DWORD PTR [ebp-0x4]
 80491f6:	c9                   	leave  
 80491f7:	8d 61 fc             	lea    esp,[ecx-0x4]
 80491fa:	c3                   	ret    
 80491fb:	66 90                	xchg   ax,ax
 80491fd:	66 90                	xchg   ax,ax
 80491ff:	90                   	nop

08049200 <__libc_csu_init>:
 8049200:	f3 0f 1e fb          	endbr32 
 8049204:	55                   	push   ebp
 8049205:	e8 6b 00 00 00       	call   8049275 <__x86.get_pc_thunk.bp>
 804920a:	81 c5 f6 2d 00 00    	add    ebp,0x2df6
 8049210:	57                   	push   edi
 8049211:	56                   	push   esi
 8049212:	53                   	push   ebx
 8049213:	83 ec 0c             	sub    esp,0xc
 8049216:	89 eb                	mov    ebx,ebp
 8049218:	8b 7c 24 28          	mov    edi,DWORD PTR [esp+0x28]
 804921c:	e8 df fd ff ff       	call   8049000 <_init>
 8049221:	8d 9d 0c ff ff ff    	lea    ebx,[ebp-0xf4]
 8049227:	8d 85 08 ff ff ff    	lea    eax,[ebp-0xf8]
 804922d:	29 c3                	sub    ebx,eax
 804922f:	c1 fb 02             	sar    ebx,0x2
 8049232:	74 29                	je     804925d <__libc_csu_init+0x5d>
 8049234:	31 f6                	xor    esi,esi
 8049236:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
 804923d:	8d 76 00             	lea    esi,[esi+0x0]
 8049240:	83 ec 04             	sub    esp,0x4
 8049243:	57                   	push   edi
 8049244:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
 8049248:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
 804924c:	ff 94 b5 08 ff ff ff 	call   DWORD PTR [ebp+esi*4-0xf8]
 8049253:	83 c6 01             	add    esi,0x1
 8049256:	83 c4 10             	add    esp,0x10
 8049259:	39 f3                	cmp    ebx,esi
 804925b:	75 e3                	jne    8049240 <__libc_csu_init+0x40>
 804925d:	83 c4 0c             	add    esp,0xc
 8049260:	5b                   	pop    ebx
 8049261:	5e                   	pop    esi
 8049262:	5f                   	pop    edi
 8049263:	5d                   	pop    ebp
 8049264:	c3                   	ret    
 8049265:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
 804926c:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]

08049270 <__libc_csu_fini>:
 8049270:	f3 0f 1e fb          	endbr32 
 8049274:	c3                   	ret    

08049275 <__x86.get_pc_thunk.bp>:
 8049275:	8b 2c 24             	mov    ebp,DWORD PTR [esp]
 8049278:	c3                   	ret    

Disassembly of section .fini:

0804927c <_fini>:
 804927c:	f3 0f 1e fb          	endbr32 
 8049280:	53                   	push   ebx
 8049281:	83 ec 08             	sub    esp,0x8
 8049284:	e8 27 fe ff ff       	call   80490b0 <__x86.get_pc_thunk.bx>
 8049289:	81 c3 77 2d 00 00    	add    ebx,0x2d77
 804928f:	83 c4 08             	add    esp,0x8
 8049292:	5b                   	pop    ebx
 8049293:	c3                   	ret    

Disassembly of section .rodata:

0804a000 <_fp_hw>:
 804a000:	03 00                	add    eax,DWORD PTR [eax]
	...

0804a004 <_IO_stdin_used>:
 804a004:	01 00                	add    DWORD PTR [eax],eax
 804a006:	02 00                	add    al,BYTE PTR [eax]
 804a008:	72 65                	jb     804a06f <__GNU_EH_FRAME_HDR+0x5b>
 804a00a:	73 75                	jae    804a081 <__GNU_EH_FRAME_HDR+0x6d>
 804a00c:	6c                   	ins    BYTE PTR es:[edi],dx
 804a00d:	74 3d                	je     804a04c <__GNU_EH_FRAME_HDR+0x38>
 804a00f:	25                   	.byte 0x25
 804a010:	64 0a 00             	or     al,BYTE PTR fs:[eax]

Disassembly of section .eh_frame_hdr:

0804a014 <__GNU_EH_FRAME_HDR>:
 804a014:	01 1b                	add    DWORD PTR [ebx],ebx
 804a016:	03 3b                	add    edi,DWORD PTR [ebx]
 804a018:	58                   	pop    eax
 804a019:	00 00                	add    BYTE PTR [eax],al
 804a01b:	00 0a                	add    BYTE PTR [edx],cl
 804a01d:	00 00                	add    BYTE PTR [eax],al
 804a01f:	00 1c f0             	add    BYTE PTR [eax+esi*8],bl
 804a022:	ff                   	(bad)  
 804a023:	ff 9c 00 00 00 3c f0 	call   FWORD PTR [eax+eax*1-0xfc40000]
 804a02a:	ff                   	(bad)  
 804a02b:	ff c0                	inc    eax
 804a02d:	00 00                	add    BYTE PTR [eax],al
 804a02f:	00 4c f0 ff          	add    BYTE PTR [eax+esi*8-0x1],cl
 804a033:	ff 74 00 00          	push   DWORD PTR [eax+eax*1+0x0]
 804a037:	00 8c f0 ff ff 88 00 	add    BYTE PTR [eax+esi*8+0x88ffff],cl
 804a03e:	00 00                	add    BYTE PTR [eax],al
 804a040:	62 f1 ff ff d4       	(bad)  {k7}{z}
 804a045:	00 00                	add    BYTE PTR [eax],al
 804a047:	00 71 f1             	add    BYTE PTR [ecx-0xf],dh
 804a04a:	ff                   	(bad)  
 804a04b:	ff f4                	push   esp
 804a04d:	00 00                	add    BYTE PTR [eax],al
 804a04f:	00 88 f1 ff ff 14    	add    BYTE PTR [eax+0x14fffff1],cl
 804a055:	01 00                	add    DWORD PTR [eax],eax
 804a057:	00 ec                	add    ah,ch
 804a059:	f1                   	icebp  
 804a05a:	ff                   	(bad)  
 804a05b:	ff 40 01             	inc    DWORD PTR [eax+0x1]
 804a05e:	00 00                	add    BYTE PTR [eax],al
 804a060:	5c                   	pop    esp
 804a061:	f2 ff                	repnz (bad) 
 804a063:	ff 8c 01 00 00 61 f2 	dec    DWORD PTR [ecx+eax*1-0xd9f0000]
 804a06a:	ff                   	(bad)  
 804a06b:	ff                   	.byte 0xff
 804a06c:	a0                   	.byte 0xa0
 804a06d:	01 00                	add    DWORD PTR [eax],eax
	...

Disassembly of section .eh_frame:

0804a070 <__FRAME_END__-0x158>:
 804a070:	14 00                	adc    al,0x0
 804a072:	00 00                	add    BYTE PTR [eax],al
 804a074:	00 00                	add    BYTE PTR [eax],al
 804a076:	00 00                	add    BYTE PTR [eax],al
 804a078:	01 7a 52             	add    DWORD PTR [edx+0x52],edi
 804a07b:	00 01                	add    BYTE PTR [ecx],al
 804a07d:	7c 08                	jl     804a087 <__GNU_EH_FRAME_HDR+0x73>
 804a07f:	01 1b                	add    DWORD PTR [ebx],ebx
 804a081:	0c 04                	or     al,0x4
 804a083:	04 88                	add    al,0x88
 804a085:	01 00                	add    DWORD PTR [eax],eax
 804a087:	00 10                	add    BYTE PTR [eax],dl
 804a089:	00 00                	add    BYTE PTR [eax],al
 804a08b:	00 1c 00             	add    BYTE PTR [eax+eax*1],bl
 804a08e:	00 00                	add    BYTE PTR [eax],al
 804a090:	d0 ef                	shr    bh,1
 804a092:	ff                   	(bad)  
 804a093:	ff                   	(bad)  
 804a094:	3b 00                	cmp    eax,DWORD PTR [eax]
 804a096:	00 00                	add    BYTE PTR [eax],al
 804a098:	00 44 07 08          	add    BYTE PTR [edi+eax*1+0x8],al
 804a09c:	10 00                	adc    BYTE PTR [eax],al
 804a09e:	00 00                	add    BYTE PTR [eax],al
 804a0a0:	30 00                	xor    BYTE PTR [eax],al
 804a0a2:	00 00                	add    BYTE PTR [eax],al
 804a0a4:	fc                   	cld    
 804a0a5:	ef                   	out    dx,eax
 804a0a6:	ff                   	(bad)  
 804a0a7:	ff 05 00 00 00 00    	inc    DWORD PTR ds:0x0
 804a0ad:	00 00                	add    BYTE PTR [eax],al
 804a0af:	00 20                	add    BYTE PTR [eax],ah
 804a0b1:	00 00                	add    BYTE PTR [eax],al
 804a0b3:	00 44 00 00          	add    BYTE PTR [eax+eax*1+0x0],al
 804a0b7:	00 78 ef             	add    BYTE PTR [eax-0x11],bh
 804a0ba:	ff                   	(bad)  
 804a0bb:	ff 20                	jmp    DWORD PTR [eax]
 804a0bd:	00 00                	add    BYTE PTR [eax],al
 804a0bf:	00 00                	add    BYTE PTR [eax],al
 804a0c1:	0e                   	push   cs
 804a0c2:	08 46 0e             	or     BYTE PTR [esi+0xe],al
 804a0c5:	0c 4a                	or     al,0x4a
 804a0c7:	0f 0b                	ud2    
 804a0c9:	74 04                	je     804a0cf <__GNU_EH_FRAME_HDR+0xbb>
 804a0cb:	78 00                	js     804a0cd <__GNU_EH_FRAME_HDR+0xb9>
 804a0cd:	3f                   	aas    
 804a0ce:	1a 39                	sbb    bh,BYTE PTR [ecx]
 804a0d0:	2a 32                	sub    dh,BYTE PTR [edx]
 804a0d2:	24 22                	and    al,0x22
 804a0d4:	10 00                	adc    BYTE PTR [eax],al
 804a0d6:	00 00                	add    BYTE PTR [eax],al
 804a0d8:	68 00 00 00 74       	push   0x74000000
 804a0dd:	ef                   	out    dx,eax
 804a0de:	ff                   	(bad)  
 804a0df:	ff 10                	call   DWORD PTR [eax]
 804a0e1:	00 00                	add    BYTE PTR [eax],al
 804a0e3:	00 00                	add    BYTE PTR [eax],al
 804a0e5:	00 00                	add    BYTE PTR [eax],al
 804a0e7:	00 1c 00             	add    BYTE PTR [eax+eax*1],bl
 804a0ea:	00 00                	add    BYTE PTR [eax],al
 804a0ec:	7c 00                	jl     804a0ee <__GNU_EH_FRAME_HDR+0xda>
 804a0ee:	00 00                	add    BYTE PTR [eax],al
 804a0f0:	86 f0                	xchg   al,dh
 804a0f2:	ff                   	(bad)  
 804a0f3:	ff 0f                	dec    DWORD PTR [edi]
 804a0f5:	00 00                	add    BYTE PTR [eax],al
 804a0f7:	00 00                	add    BYTE PTR [eax],al
 804a0f9:	45                   	inc    ebp
 804a0fa:	0e                   	push   cs
 804a0fb:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
 804a101:	47                   	inc    edi
 804a102:	c5 0c 04             	lds    ecx,FWORD PTR [esp+eax*1]
 804a105:	04 00                	add    al,0x0
 804a107:	00 1c 00             	add    BYTE PTR [eax+eax*1],bl
 804a10a:	00 00                	add    BYTE PTR [eax],al
 804a10c:	9c                   	pushf  
 804a10d:	00 00                	add    BYTE PTR [eax],al
 804a10f:	00 75 f0             	add    BYTE PTR [ebp-0x10],dh
 804a112:	ff                   	(bad)  
 804a113:	ff 17                	call   DWORD PTR [edi]
 804a115:	00 00                	add    BYTE PTR [eax],al
 804a117:	00 00                	add    BYTE PTR [eax],al
 804a119:	45                   	inc    ebp
 804a11a:	0e                   	push   cs
 804a11b:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
 804a121:	4f                   	dec    edi
 804a122:	c5 0c 04             	lds    ecx,FWORD PTR [esp+eax*1]
 804a125:	04 00                	add    al,0x0
 804a127:	00 28                	add    BYTE PTR [eax],ch
 804a129:	00 00                	add    BYTE PTR [eax],al
 804a12b:	00 bc 00 00 00 6c f0 	add    BYTE PTR [eax+eax*1-0xf940000],bh
 804a132:	ff                   	(bad)  
 804a133:	ff 5f 00             	call   FWORD PTR [edi+0x0]
 804a136:	00 00                	add    BYTE PTR [eax],al
 804a138:	00 48 0c             	add    BYTE PTR [eax+0xc],cl
 804a13b:	01 00                	add    DWORD PTR [eax],eax
 804a13d:	47                   	inc    edi
 804a13e:	10 05 02 75 00 43    	adc    BYTE PTR ds:0x43007502,al
 804a144:	0f 03 75 7c          	lsl    esi,WORD PTR [ebp+0x7c]
 804a148:	06                   	push   es
 804a149:	02 48 0c             	add    cl,BYTE PTR [eax+0xc]
 804a14c:	01 00                	add    DWORD PTR [eax],eax
 804a14e:	41                   	inc    ecx
 804a14f:	c5 43 0c             	lds    eax,FWORD PTR [ebx+0xc]
 804a152:	04 04                	add    al,0x4
 804a154:	48                   	dec    eax
 804a155:	00 00                	add    BYTE PTR [eax],al
 804a157:	00 e8                	add    al,ch
 804a159:	00 00                	add    BYTE PTR [eax],al
 804a15b:	00 a4 f0 ff ff 65 00 	add    BYTE PTR [eax+esi*8+0x65ffff],ah
 804a162:	00 00                	add    BYTE PTR [eax],al
 804a164:	00 45 0e             	add    BYTE PTR [ebp+0xe],al
 804a167:	08 85 02 4c 0e 0c    	or     BYTE PTR [ebp+0xc0e4c02],al
 804a16d:	87 03                	xchg   DWORD PTR [ebx],eax
 804a16f:	41                   	inc    ecx
 804a170:	0e                   	push   cs
 804a171:	10 86 04 41 0e 14    	adc    BYTE PTR [esi+0x140e4104],al
 804a177:	83 05 43 0e 20 6d 0e 	add    DWORD PTR ds:0x6d200e43,0xe
 804a17e:	24 41                	and    al,0x41
 804a180:	0e                   	push   cs
 804a181:	28 44 0e 2c          	sub    BYTE PTR [esi+ecx*1+0x2c],al
 804a185:	44                   	inc    esp
 804a186:	0e                   	push   cs
 804a187:	30 4d 0e             	xor    BYTE PTR [ebp+0xe],cl
 804a18a:	20 47 0e             	and    BYTE PTR [edi+0xe],al
 804a18d:	14 41                	adc    al,0x41
 804a18f:	c3                   	ret    
 804a190:	0e                   	push   cs
 804a191:	10 41 c6             	adc    BYTE PTR [ecx-0x3a],al
 804a194:	0e                   	push   cs
 804a195:	0c 41                	or     al,0x41
 804a197:	c7                   	(bad)  
 804a198:	0e                   	push   cs
 804a199:	08 41 c5             	or     BYTE PTR [ecx-0x3b],al
 804a19c:	0e                   	push   cs
 804a19d:	04 00                	add    al,0x0
 804a19f:	00 10                	add    BYTE PTR [eax],dl
 804a1a1:	00 00                	add    BYTE PTR [eax],al
 804a1a3:	00 34 01             	add    BYTE PTR [ecx+eax*1],dh
 804a1a6:	00 00                	add    BYTE PTR [eax],al
 804a1a8:	c8 f0 ff ff          	enter  0xfff0,0xff
 804a1ac:	05 00 00 00 00       	add    eax,0x0
 804a1b1:	00 00                	add    BYTE PTR [eax],al
 804a1b3:	00 10                	add    BYTE PTR [eax],dl
 804a1b5:	00 00                	add    BYTE PTR [eax],al
 804a1b7:	00 48 01             	add    BYTE PTR [eax+0x1],cl
 804a1ba:	00 00                	add    BYTE PTR [eax],al
 804a1bc:	b9 f0 ff ff 04       	mov    ecx,0x4fffff0
 804a1c1:	00 00                	add    BYTE PTR [eax],al
 804a1c3:	00 00                	add    BYTE PTR [eax],al
 804a1c5:	00 00                	add    BYTE PTR [eax],al
	...

0804a1c8 <__FRAME_END__>:
 804a1c8:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .init_array:

0804bf08 <__frame_dummy_init_array_entry>:
 804bf08:	70 91                	jo     804be9b <__FRAME_END__+0x1cd3>
 804bf0a:	04 08                	add    al,0x8

Disassembly of section .fini_array:

0804bf0c <__do_global_dtors_aux_fini_array_entry>:
 804bf0c:	40                   	inc    eax
 804bf0d:	91                   	xchg   ecx,eax
 804bf0e:	04 08                	add    al,0x8

Disassembly of section .dynamic:

0804bf10 <_DYNAMIC>:
 804bf10:	01 00                	add    DWORD PTR [eax],eax
 804bf12:	00 00                	add    BYTE PTR [eax],al
 804bf14:	01 00                	add    DWORD PTR [eax],eax
 804bf16:	00 00                	add    BYTE PTR [eax],al
 804bf18:	0c 00                	or     al,0x0
 804bf1a:	00 00                	add    BYTE PTR [eax],al
 804bf1c:	00 90 04 08 0d 00    	add    BYTE PTR [eax+0xd0804],dl
 804bf22:	00 00                	add    BYTE PTR [eax],al
 804bf24:	7c 92                	jl     804beb8 <__FRAME_END__+0x1cf0>
 804bf26:	04 08                	add    al,0x8
 804bf28:	19 00                	sbb    DWORD PTR [eax],eax
 804bf2a:	00 00                	add    BYTE PTR [eax],al
 804bf2c:	08 bf 04 08 1b 00    	or     BYTE PTR [edi+0x1b0804],bh
 804bf32:	00 00                	add    BYTE PTR [eax],al
 804bf34:	04 00                	add    al,0x0
 804bf36:	00 00                	add    BYTE PTR [eax],al
 804bf38:	1a 00                	sbb    al,BYTE PTR [eax]
 804bf3a:	00 00                	add    BYTE PTR [eax],al
 804bf3c:	0c bf                	or     al,0xbf
 804bf3e:	04 08                	add    al,0x8
 804bf40:	1c 00                	sbb    al,0x0
 804bf42:	00 00                	add    BYTE PTR [eax],al
 804bf44:	04 00                	add    al,0x0
 804bf46:	00 00                	add    BYTE PTR [eax],al
 804bf48:	f5                   	cmc    
 804bf49:	fe                   	(bad)  
 804bf4a:	ff 6f 28             	jmp    FWORD PTR [edi+0x28]
 804bf4d:	82 04 08 05          	add    BYTE PTR [eax+ecx*1],0x5
 804bf51:	00 00                	add    BYTE PTR [eax],al
 804bf53:	00 98 82 04 08 06    	add    BYTE PTR [eax+0x6080482],bl
 804bf59:	00 00                	add    BYTE PTR [eax],al
 804bf5b:	00 48 82             	add    BYTE PTR [eax-0x7e],cl
 804bf5e:	04 08                	add    al,0x8
 804bf60:	0a 00                	or     al,BYTE PTR [eax]
 804bf62:	00 00                	add    BYTE PTR [eax],al
 804bf64:	4c                   	dec    esp
 804bf65:	00 00                	add    BYTE PTR [eax],al
 804bf67:	00 0b                	add    BYTE PTR [ebx],cl
 804bf69:	00 00                	add    BYTE PTR [eax],al
 804bf6b:	00 10                	add    BYTE PTR [eax],dl
 804bf6d:	00 00                	add    BYTE PTR [eax],al
 804bf6f:	00 15 00 00 00 00    	add    BYTE PTR ds:0x0,dl
 804bf75:	00 00                	add    BYTE PTR [eax],al
 804bf77:	00 03                	add    BYTE PTR [ebx],al
 804bf79:	00 00                	add    BYTE PTR [eax],al
 804bf7b:	00 00                	add    BYTE PTR [eax],al
 804bf7d:	c0 04 08 02          	rol    BYTE PTR [eax+ecx*1],0x2
 804bf81:	00 00                	add    BYTE PTR [eax],al
 804bf83:	00 08                	add    BYTE PTR [eax],cl
 804bf85:	00 00                	add    BYTE PTR [eax],al
 804bf87:	00 14 00             	add    BYTE PTR [eax+eax*1],dl
 804bf8a:	00 00                	add    BYTE PTR [eax],al
 804bf8c:	11 00                	adc    DWORD PTR [eax],eax
 804bf8e:	00 00                	add    BYTE PTR [eax],al
 804bf90:	17                   	pop    ss
 804bf91:	00 00                	add    BYTE PTR [eax],al
 804bf93:	00 20                	add    BYTE PTR [eax],ah
 804bf95:	83 04 08 11          	add    DWORD PTR [eax+ecx*1],0x11
 804bf99:	00 00                	add    BYTE PTR [eax],al
 804bf9b:	00 10                	add    BYTE PTR [eax],dl
 804bf9d:	83 04 08 12          	add    DWORD PTR [eax+ecx*1],0x12
 804bfa1:	00 00                	add    BYTE PTR [eax],al
 804bfa3:	00 10                	add    BYTE PTR [eax],dl
 804bfa5:	00 00                	add    BYTE PTR [eax],al
 804bfa7:	00 13                	add    BYTE PTR [ebx],dl
 804bfa9:	00 00                	add    BYTE PTR [eax],al
 804bfab:	00 08                	add    BYTE PTR [eax],cl
 804bfad:	00 00                	add    BYTE PTR [eax],al
 804bfaf:	00 fe                	add    dh,bh
 804bfb1:	ff                   	(bad)  
 804bfb2:	ff 6f f0             	jmp    FWORD PTR [edi-0x10]
 804bfb5:	82 04 08 ff          	add    BYTE PTR [eax+ecx*1],0xff
 804bfb9:	ff                   	(bad)  
 804bfba:	ff 6f 01             	jmp    FWORD PTR [edi+0x1]
 804bfbd:	00 00                	add    BYTE PTR [eax],al
 804bfbf:	00 f0                	add    al,dh
 804bfc1:	ff                   	(bad)  
 804bfc2:	ff 6f e4             	jmp    FWORD PTR [edi-0x1c]
 804bfc5:	82 04 08 00          	add    BYTE PTR [eax+ecx*1],0x0
	...

Disassembly of section .got:

0804bff8 <.got>:
	...

Disassembly of section .got.plt:

0804c000 <_GLOBAL_OFFSET_TABLE_>:
 804c000:	10 bf 04 08 00 00    	adc    BYTE PTR [edi+0x804],bh
 804c006:	00 00                	add    BYTE PTR [eax],al
 804c008:	00 00                	add    BYTE PTR [eax],al
 804c00a:	00 00                	add    BYTE PTR [eax],al
 804c00c:	40                   	inc    eax
 804c00d:	90                   	nop
 804c00e:	04 08                	add    al,0x8

Disassembly of section .data:

0804c010 <__data_start>:
 804c010:	00 00                	add    BYTE PTR [eax],al
	...

0804c014 <__dso_handle>:
 804c014:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .bss:

0804c018 <completed.7622>:
 804c018:	00 00                	add    BYTE PTR [eax],al
	...

0804c01c <y>:
 804c01c:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	47                   	inc    edi
   1:	43                   	inc    ebx
   2:	43                   	inc    ebx
   3:	3a 20                	cmp    ah,BYTE PTR [eax]
   5:	28 55 62             	sub    BYTE PTR [ebp+0x62],dl
   8:	75 6e                	jne    78 <_init-0x8048f88>
   a:	74 75                	je     81 <_init-0x8048f7f>
   c:	20 39                	and    BYTE PTR [ecx],bh
   e:	2e 33 2e             	xor    ebp,DWORD PTR cs:[esi]
  11:	30 2d 31 37 75 62    	xor    BYTE PTR ds:0x62753731,ch
  17:	75 6e                	jne    87 <_init-0x8048f79>
  19:	74 75                	je     90 <_init-0x8048f70>
  1b:	31 7e 32             	xor    DWORD PTR [esi+0x32],edi
  1e:	30 2e                	xor    BYTE PTR [esi],ch
  20:	30 34 29             	xor    BYTE PTR [ecx+ebp*1],dh
  23:	20 39                	and    BYTE PTR [ecx],bh
  25:	2e 33 2e             	xor    ebp,DWORD PTR cs:[esi]
  28:	30 00                	xor    BYTE PTR [eax],al

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	1c 00                	sbb    al,0x0
   2:	00 00                	add    BYTE PTR [eax],al
   4:	02 00                	add    al,BYTE PTR [eax]
   6:	00 00                	add    BYTE PTR [eax],al
   8:	00 00                	add    BYTE PTR [eax],al
   a:	04 00                	add    al,0x0
   c:	00 00                	add    BYTE PTR [eax],al
   e:	00 00                	add    BYTE PTR [eax],al
  10:	76 91                	jbe    ffffffa3 <_end+0xf7fb3f83>
  12:	04 08                	add    al,0x8
  14:	85 00                	test   DWORD PTR [eax],eax
	...

Disassembly of section .debug_info:

00000000 <.debug_info>:
   0:	71 03                	jno    5 <_init-0x8048ffb>
   2:	00 00                	add    BYTE PTR [eax],al
   4:	04 00                	add    al,0x0
   6:	00 00                	add    BYTE PTR [eax],al
   8:	00 00                	add    BYTE PTR [eax],al
   a:	04 01                	add    al,0x1
   c:	f6 01 00             	test   BYTE PTR [ecx],0x0
   f:	00 0c 88             	add    BYTE PTR [eax+ecx*4],cl
  12:	01 00                	add    DWORD PTR [eax],eax
  14:	00 2e                	add    BYTE PTR [esi],ch
  16:	00 00                	add    BYTE PTR [eax],al
  18:	00 76 91             	add    BYTE PTR [esi-0x6f],dh
  1b:	04 08                	add    al,0x8
  1d:	85 00                	test   DWORD PTR [eax],eax
  1f:	00 00                	add    BYTE PTR [eax],al
  21:	00 00                	add    BYTE PTR [eax],al
  23:	00 00                	add    BYTE PTR [eax],al
  25:	02 51 00             	add    dl,BYTE PTR [ecx+0x0]
  28:	00 00                	add    BYTE PTR [eax],al
  2a:	02 d1                	add    dl,cl
  2c:	17                   	pop    ss
  2d:	31 00                	xor    DWORD PTR [eax],eax
  2f:	00 00                	add    BYTE PTR [eax],al
  31:	03 04 07             	add    eax,DWORD PTR [edi+eax*1]
  34:	08 01                	or     BYTE PTR [ecx],al
  36:	00 00                	add    BYTE PTR [eax],al
  38:	03 01                	add    eax,DWORD PTR [ecx]
  3a:	06                   	push   es
  3b:	f9                   	stc    
  3c:	00 00                	add    BYTE PTR [eax],al
  3e:	00 04 38             	add    BYTE PTR [eax+edi*1],al
  41:	00 00                	add    BYTE PTR [eax],al
  43:	00 03                	add    BYTE PTR [ebx],al
  45:	01 08                	add    DWORD PTR [eax],ecx
  47:	f0 00 00             	lock add BYTE PTR [eax],al
  4a:	00 03                	add    BYTE PTR [ebx],al
  4c:	02 07                	add    al,BYTE PTR [edi]
  4e:	4f                   	dec    edi
  4f:	01 00                	add    DWORD PTR [eax],eax
  51:	00 03                	add    BYTE PTR [ebx],al
  53:	04 07                	add    al,0x7
  55:	03 01                	add    eax,DWORD PTR [ecx]
  57:	00 00                	add    BYTE PTR [eax],al
  59:	03 01                	add    eax,DWORD PTR [ecx]
  5b:	06                   	push   es
  5c:	f2 00 00             	repnz add BYTE PTR [eax],al
  5f:	00 03                	add    BYTE PTR [ebx],al
  61:	02 05 7a 00 00 00    	add    al,BYTE PTR ds:0x7a
  67:	05 04 05 69 6e       	add    eax,0x6e690504
  6c:	74 00                	je     6e <_init-0x8048f92>
  6e:	02 c2                	add    al,dl
  70:	00 00                	add    BYTE PTR [eax],al
  72:	00 03                	add    BYTE PTR [ebx],al
  74:	2f                   	das    
  75:	2c 7a                	sub    al,0x7a
  77:	00 00                	add    BYTE PTR [eax],al
  79:	00 03                	add    BYTE PTR [ebx],al
  7b:	08 05 ae 00 00 00    	or     BYTE PTR ds:0xae,al
  81:	03 08                	add    ecx,DWORD PTR [eax]
  83:	07                   	pop    es
  84:	fe 00                	inc    BYTE PTR [eax]
  86:	00 00                	add    BYTE PTR [eax],al
  88:	02 a7 01 00 00 03    	add    ah,BYTE PTR [edi+0x3000001]
  8e:	98                   	cwde   
  8f:	19 94 00 00 00 03 04 	sbb    DWORD PTR [eax+eax*1+0x4030000],edx
  96:	05 b3 00 00 00       	add    eax,0xb3
  9b:	02 9d 01 00 00 03    	add    bl,BYTE PTR [ebp+0x3000001]
  a1:	99                   	cdq    
  a2:	1b 6e 00             	sbb    ebp,DWORD PTR [esi+0x0]
  a5:	00 00                	add    BYTE PTR [eax],al
  a7:	06                   	push   es
  a8:	04 07                	add    al,0x7
  aa:	04 38                	add    al,0x38
  ac:	00 00                	add    BYTE PTR [eax],al
  ae:	00 08                	add    BYTE PTR [eax],cl
  b0:	e7 00                	out    0x0,eax
  b2:	00 00                	add    BYTE PTR [eax],al
  b4:	94                   	xchg   esp,eax
  b5:	04 31                	add    al,0x31
  b7:	08 36                	or     BYTE PTR [esi],dh
  b9:	02 00                	add    al,BYTE PTR [eax]
  bb:	00 09                	add    BYTE PTR [ecx],cl
  bd:	66 00 00             	data16 add BYTE PTR [eax],al
  c0:	00 04 33             	add    BYTE PTR [ebx+esi*1],al
  c3:	07                   	pop    es
  c4:	67 00 00             	add    BYTE PTR [bx+si],al
  c7:	00 00                	add    BYTE PTR [eax],al
  c9:	09 42 01             	or     DWORD PTR [edx+0x1],eax
  cc:	00 00                	add    BYTE PTR [eax],al
  ce:	04 36                	add    al,0x36
  d0:	09 a9 00 00 00 04    	or     DWORD PTR [ecx+0x4000000],ebp
  d6:	09 8d 00 00 00 04    	or     DWORD PTR [ebp+0x4000000],ecx
  dc:	37                   	aaa    
  dd:	09 a9 00 00 00 08    	or     DWORD PTR [ecx+0x8000000],ebp
  e3:	09 e8                	or     eax,ebp
  e5:	01 00                	add    DWORD PTR [eax],eax
  e7:	00 04 38             	add    BYTE PTR [eax+edi*1],al
  ea:	09 a9 00 00 00 0c    	or     DWORD PTR [ecx+0xc000000],ebp
  f0:	09 2a                	or     DWORD PTR [edx],ebp
  f2:	01 00                	add    DWORD PTR [eax],eax
  f4:	00 04 39             	add    BYTE PTR [ecx+edi*1],al
  f7:	09 a9 00 00 00 10    	or     DWORD PTR [ecx+0x10000000],ebp
  fd:	09 58 00             	or     DWORD PTR [eax+0x0],ebx
 100:	00 00                	add    BYTE PTR [eax],al
 102:	04 3a                	add    al,0x3a
 104:	09 a9 00 00 00 14    	or     DWORD PTR [ecx+0x14000000],ebp
 10a:	09 8f 01 00 00 04    	or     DWORD PTR [edi+0x4000001],ecx
 110:	3b 09                	cmp    ecx,DWORD PTR [ecx]
 112:	a9 00 00 00 18       	test   eax,0x18000000
 117:	09 6d 00             	or     DWORD PTR [ebp+0x0],ebp
 11a:	00 00                	add    BYTE PTR [eax],al
 11c:	04 3c                	add    al,0x3c
 11e:	09 a9 00 00 00 1c    	or     DWORD PTR [ecx+0x1c000000],ebp
 124:	09 00                	or     DWORD PTR [eax],eax
 126:	00 00                	add    BYTE PTR [eax],al
 128:	00 04 3d 09 a9 00 00 	add    BYTE PTR [edi*1+0xa909],al
 12f:	00 20                	add    BYTE PTR [eax],ah
 131:	09 9b 02 00 00 04    	or     DWORD PTR [ebx+0x4000002],ebx
 137:	40                   	inc    eax
 138:	09 a9 00 00 00 24    	or     DWORD PTR [ecx+0x24000000],ebp
 13e:	09 c4                	or     esp,eax
 140:	01 00                	add    DWORD PTR [eax],eax
 142:	00 04 41             	add    BYTE PTR [ecx+eax*2],al
 145:	09 a9 00 00 00 28    	or     DWORD PTR [ecx+0x28000000],ebp
 14b:	09 21                	or     DWORD PTR [ecx],esp
 14d:	00 00                	add    BYTE PTR [eax],al
 14f:	00 04 42             	add    BYTE PTR [edx+eax*2],al
 152:	09 a9 00 00 00 2c    	or     DWORD PTR [ecx+0x2c000000],ebp
 158:	09 84 00 00 00 04 44 	or     DWORD PTR [eax+eax*1+0x44040000],eax
 15f:	16                   	push   ss
 160:	4f                   	dec    edi
 161:	02 00                	add    al,BYTE PTR [eax]
 163:	00 30                	add    BYTE PTR [eax],dh
 165:	09 af 01 00 00 04    	or     DWORD PTR [edi+0x4000001],ebp
 16b:	46                   	inc    esi
 16c:	14 55                	adc    al,0x55
 16e:	02 00                	add    al,BYTE PTR [eax]
 170:	00 34 09             	add    BYTE PTR [ecx+ecx*1],dh
 173:	b5 02                	mov    ch,0x2
 175:	00 00                	add    BYTE PTR [eax],al
 177:	04 48                	add    al,0x48
 179:	07                   	pop    es
 17a:	67 00 00             	add    BYTE PTR [bx+si],al
 17d:	00 38                	add    BYTE PTR [eax],bh
 17f:	09 da                	or     edx,ebx
 181:	01 00                	add    DWORD PTR [eax],eax
 183:	00 04 49             	add    BYTE PTR [ecx+ecx*2],al
 186:	07                   	pop    es
 187:	67 00 00             	add    BYTE PTR [bx+si],al
 18a:	00 3c 09             	add    BYTE PTR [ecx+ecx*1],bh
 18d:	0c 00                	or     al,0x0
 18f:	00 00                	add    BYTE PTR [eax],al
 191:	04 4a                	add    al,0x4a
 193:	0b 88 00 00 00 40    	or     ecx,DWORD PTR [eax+0x40000000]
 199:	09 cc                	or     esp,ecx
 19b:	00 00                	add    BYTE PTR [eax],al
 19d:	00 04 4d 12 4b 00 00 	add    BYTE PTR [ecx*2+0x4b12],al
 1a4:	00 44 09 d8          	add    BYTE PTR [ecx+ecx*1-0x28],al
 1a8:	00 00                	add    BYTE PTR [eax],al
 1aa:	00 04 4e             	add    BYTE PTR [esi+ecx*2],al
 1ad:	0f 59 00             	mulps  xmm0,XMMWORD PTR [eax]
 1b0:	00 00                	add    BYTE PTR [eax],al
 1b2:	46                   	inc    esi
 1b3:	09 20                	or     DWORD PTR [eax],esp
 1b5:	01 00                	add    DWORD PTR [eax],eax
 1b7:	00 04 4f             	add    BYTE PTR [edi+ecx*2],al
 1ba:	08 5b 02             	or     BYTE PTR [ebx+0x2],bl
 1bd:	00 00                	add    BYTE PTR [eax],al
 1bf:	47                   	inc    edi
 1c0:	09 bc 00 00 00 04 51 	or     DWORD PTR [eax+eax*1+0x51040000],edi
 1c7:	0f 6b 02             	packssdw mm0,QWORD PTR [edx]
 1ca:	00 00                	add    BYTE PTR [eax],al
 1cc:	48                   	dec    eax
 1cd:	09 10                	or     DWORD PTR [eax],edx
 1cf:	00 00                	add    BYTE PTR [eax],al
 1d1:	00 04 59             	add    BYTE PTR [ecx+ebx*2],al
 1d4:	0d 9b 00 00 00       	or     eax,0x9b
 1d9:	4c                   	dec    esp
 1da:	09 7f 01             	or     DWORD PTR [edi+0x1],edi
 1dd:	00 00                	add    BYTE PTR [eax],al
 1df:	04 5b                	add    al,0x5b
 1e1:	17                   	pop    ss
 1e2:	76 02                	jbe    1e6 <_init-0x8048e1a>
 1e4:	00 00                	add    BYTE PTR [eax],al
 1e6:	54                   	push   esp
 1e7:	09 b9 01 00 00 04    	or     DWORD PTR [ecx+0x4000001],edi
 1ed:	5c                   	pop    esp
 1ee:	19 81 02 00 00 58    	sbb    DWORD PTR [ecx+0x58000002],eax
 1f4:	09 67 01             	or     DWORD PTR [edi+0x1],esp
 1f7:	00 00                	add    BYTE PTR [eax],al
 1f9:	04 5d                	add    al,0x5d
 1fb:	14 55                	adc    al,0x55
 1fd:	02 00                	add    al,BYTE PTR [eax]
 1ff:	00 5c 09 9a          	add    BYTE PTR [ecx+ecx*1-0x66],bl
 203:	00 00                	add    BYTE PTR [eax],al
 205:	00 04 5e             	add    BYTE PTR [esi+ebx*2],al
 208:	09 a7 00 00 00 60    	or     DWORD PTR [edi+0x60000000],esp
 20e:	09 75 01             	or     DWORD PTR [ebp+0x1],esi
 211:	00 00                	add    BYTE PTR [eax],al
 213:	04 5f                	add    al,0x5f
 215:	0a 25 00 00 00 64    	or     ah,BYTE PTR ds:0x64000000
 21b:	09 e2                	or     edx,esp
 21d:	01 00                	add    DWORD PTR [eax],eax
 21f:	00 04 60             	add    BYTE PTR [eax+eiz*2],al
 222:	07                   	pop    es
 223:	67 00 00             	add    BYTE PTR [bx+si],al
 226:	00 68 09             	add    BYTE PTR [eax+0x9],ch
 229:	39 01                	cmp    DWORD PTR [ecx],eax
 22b:	00 00                	add    BYTE PTR [eax],al
 22d:	04 62                	add    al,0x62
 22f:	08 87 02 00 00 6c    	or     BYTE PTR [edi+0x6c000002],al
 235:	00 02                	add    BYTE PTR [edx],al
 237:	eb 00                	jmp    239 <_init-0x8048dc7>
 239:	00 00                	add    BYTE PTR [eax],al
 23b:	05 07 19 af 00       	add    eax,0xaf1907
 240:	00 00                	add    BYTE PTR [eax],al
 242:	0a c4                	or     al,ah
 244:	02 00                	add    al,BYTE PTR [eax]
 246:	00 04 2b             	add    BYTE PTR [ebx+ebp*1],al
 249:	0e                   	push   cs
 24a:	0b 15 01 00 00 07    	or     edx,DWORD PTR ds:0x7000001
 250:	04 4a                	add    al,0x4a
 252:	02 00                	add    al,BYTE PTR [eax]
 254:	00 07                	add    BYTE PTR [edi],al
 256:	04 af                	add    al,0xaf
 258:	00 00                	add    BYTE PTR [eax],al
 25a:	00 0c 38             	add    BYTE PTR [eax+edi*1],cl
 25d:	00 00                	add    BYTE PTR [eax],al
 25f:	00 6b 02             	add    BYTE PTR [ebx+0x2],ch
 262:	00 00                	add    BYTE PTR [eax],al
 264:	0d 31 00 00 00       	or     eax,0x31
 269:	00 00                	add    BYTE PTR [eax],al
 26b:	07                   	pop    es
 26c:	04 42                	add    al,0x42
 26e:	02 00                	add    al,BYTE PTR [eax]
 270:	00 0b                	add    BYTE PTR [ebx],cl
 272:	7c 01                	jl     275 <_init-0x8048d8b>
 274:	00 00                	add    BYTE PTR [eax],al
 276:	07                   	pop    es
 277:	04 71                	add    al,0x71
 279:	02 00                	add    al,BYTE PTR [eax]
 27b:	00 0b                	add    BYTE PTR [ebx],cl
 27d:	b6 01                	mov    dh,0x1
 27f:	00 00                	add    BYTE PTR [eax],al
 281:	07                   	pop    es
 282:	04 7c                	add    al,0x7c
 284:	02 00                	add    al,BYTE PTR [eax]
 286:	00 0c 38             	add    BYTE PTR [eax+edi*1],cl
 289:	00 00                	add    BYTE PTR [eax],al
 28b:	00 97 02 00 00 0d    	add    BYTE PTR [edi+0xd000002],dl
 291:	31 00                	xor    DWORD PTR [eax],eax
 293:	00 00                	add    BYTE PTR [eax],al
 295:	27                   	daa    
 296:	00 0e                	add    BYTE PTR [esi],cl
 298:	d4 01                	aam    0x1
 29a:	00 00                	add    BYTE PTR [eax],al
 29c:	06                   	push   es
 29d:	89 0e                	mov    DWORD PTR [esi],ecx
 29f:	a3 02 00 00 07       	mov    ds:0x7000002,eax
 2a4:	04 36                	add    al,0x36
 2a6:	02 00                	add    al,BYTE PTR [eax]
 2a8:	00 0e                	add    BYTE PTR [esi],cl
 2aa:	bd 02 00 00 06       	mov    ebp,0x6000002
 2af:	8a 0e                	mov    cl,BYTE PTR [esi]
 2b1:	a3 02 00 00 0e       	mov    ds:0xe000002,eax
 2b6:	a7                   	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 2b7:	00 00                	add    BYTE PTR [eax],al
 2b9:	00 06                	add    BYTE PTR [esi],al
 2bb:	8b 0e                	mov    ecx,DWORD PTR [esi]
 2bd:	a3 02 00 00 0e       	mov    ds:0xe000002,eax
 2c2:	18 00                	sbb    BYTE PTR [eax],al
 2c4:	00 00                	add    BYTE PTR [eax],al
 2c6:	07                   	pop    es
 2c7:	1a 0c 67             	sbb    cl,BYTE PTR [edi+eiz*2]
 2ca:	00 00                	add    BYTE PTR [eax],al
 2cc:	00 0c e3             	add    BYTE PTR [ebx+eiz*8],cl
 2cf:	02 00                	add    al,BYTE PTR [eax]
 2d1:	00 d8                	add    al,bl
 2d3:	02 00                	add    al,BYTE PTR [eax]
 2d5:	00 0f                	add    BYTE PTR [edi],cl
 2d7:	00 04 cd 02 00 00 07 	add    BYTE PTR [ecx*8+0x7000002],al
 2de:	04 3f                	add    al,0x3f
 2e0:	00 00                	add    BYTE PTR [eax],al
 2e2:	00 04 dd 02 00 00 0e 	add    BYTE PTR [ebx*8+0xe000002],al
 2e9:	a9 02 00 00 07       	test   eax,0x7000002
 2ee:	1b 1a                	sbb    ebx,DWORD PTR [edx]
 2f0:	d8 02                	fadd   DWORD PTR [edx]
 2f2:	00 00                	add    BYTE PTR [eax],al
 2f4:	10 79 00             	adc    BYTE PTR [ecx+0x0],bh
 2f7:	01 03                	add    DWORD PTR [ebx],eax
 2f9:	05 67 00 00 00       	add    eax,0x67
 2fe:	05 03 1c c0 04       	add    eax,0x4c01c03
 303:	08 11                	or     BYTE PTR [ecx],dl
 305:	62 01                	bound  eax,QWORD PTR [ecx]
 307:	00 00                	add    BYTE PTR [eax],al
 309:	01 0f                	add    DWORD PTR [edi],ecx
 30b:	06                   	push   es
 30c:	9c                   	pushf  
 30d:	91                   	xchg   ecx,eax
 30e:	04 08                	add    al,0x8
 310:	5f                   	pop    edi
 311:	00 00                	add    BYTE PTR [eax],al
 313:	00 01                	add    BYTE PTR [ecx],al
 315:	9c                   	pushf  
 316:	28 03                	sub    BYTE PTR [ebx],al
 318:	00 00                	add    BYTE PTR [eax],al
 31a:	12 78 00             	adc    bh,BYTE PTR [eax+0x0]
 31d:	01 11                	add    DWORD PTR [ecx],edx
 31f:	06                   	push   es
 320:	67 00 00             	add    BYTE PTR [bx+si],al
 323:	00 02                	add    BYTE PTR [edx],al
 325:	75 74                	jne    39b <_init-0x8048c65>
 327:	00 13                	add    BYTE PTR [ebx],dl
 329:	64 65 63 00          	fs arpl WORD PTR gs:[eax],ax
 32d:	01 0a                	add    DWORD PTR [edx],ecx
 32f:	05 67 00 00 00       	add    eax,0x67
 334:	85 91 04 08 17 00    	test   DWORD PTR [ecx+0x170804],edx
 33a:	00 00                	add    BYTE PTR [eax],al
 33c:	01 9c 50 03 00 00 14 	add    DWORD PTR [eax+edx*2+0x14000003],ebx
 343:	62 00                	bound  eax,QWORD PTR [eax]
 345:	01 0a                	add    DWORD PTR [edx],ecx
 347:	0d 67 00 00 00       	or     eax,0x67
 34c:	02 91 00 00 15 69    	add    dl,BYTE PTR [ecx+0x69150000]
 352:	6e                   	outs   dx,BYTE PTR ds:[esi]
 353:	63 00                	arpl   WORD PTR [eax],ax
 355:	01 05 0c 67 00 00    	add    DWORD PTR ds:0x670c,eax
 35b:	00 76 91             	add    BYTE PTR [esi-0x6f],dh
 35e:	04 08                	add    al,0x8
 360:	0f 00 00             	sldt   WORD PTR [eax]
 363:	00 01                	add    BYTE PTR [ecx],al
 365:	9c                   	pushf  
 366:	14 61                	adc    al,0x61
 368:	00 01                	add    BYTE PTR [ecx],al
 36a:	05 14 67 00 00       	add    eax,0x6714
 36f:	00 02                	add    BYTE PTR [edx],al
 371:	91                   	xchg   ecx,eax
 372:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	01 11                	add    DWORD PTR [ecx],edx
   2:	01 25 0e 13 0b 03    	add    DWORD PTR ds:0x30b130e,esp
   8:	0e                   	push   cs
   9:	1b 0e                	sbb    ecx,DWORD PTR [esi]
   b:	11 01                	adc    DWORD PTR [ecx],eax
   d:	12 06                	adc    al,BYTE PTR [esi]
   f:	10 17                	adc    BYTE PTR [edi],dl
  11:	00 00                	add    BYTE PTR [eax],al
  13:	02 16                	add    dl,BYTE PTR [esi]
  15:	00 03                	add    BYTE PTR [ebx],al
  17:	0e                   	push   cs
  18:	3a 0b                	cmp    cl,BYTE PTR [ebx]
  1a:	3b 0b                	cmp    ecx,DWORD PTR [ebx]
  1c:	39 0b                	cmp    DWORD PTR [ebx],ecx
  1e:	49                   	dec    ecx
  1f:	13 00                	adc    eax,DWORD PTR [eax]
  21:	00 03                	add    BYTE PTR [ebx],al
  23:	24 00                	and    al,0x0
  25:	0b 0b                	or     ecx,DWORD PTR [ebx]
  27:	3e 0b 03             	or     eax,DWORD PTR ds:[ebx]
  2a:	0e                   	push   cs
  2b:	00 00                	add    BYTE PTR [eax],al
  2d:	04 26                	add    al,0x26
  2f:	00 49 13             	add    BYTE PTR [ecx+0x13],cl
  32:	00 00                	add    BYTE PTR [eax],al
  34:	05 24 00 0b 0b       	add    eax,0xb0b0024
  39:	3e 0b 03             	or     eax,DWORD PTR ds:[ebx]
  3c:	08 00                	or     BYTE PTR [eax],al
  3e:	00 06                	add    BYTE PTR [esi],al
  40:	0f 00 0b             	str    WORD PTR [ebx]
  43:	0b 00                	or     eax,DWORD PTR [eax]
  45:	00 07                	add    BYTE PTR [edi],al
  47:	0f 00 0b             	str    WORD PTR [ebx]
  4a:	0b 49 13             	or     ecx,DWORD PTR [ecx+0x13]
  4d:	00 00                	add    BYTE PTR [eax],al
  4f:	08 13                	or     BYTE PTR [ebx],dl
  51:	01 03                	add    DWORD PTR [ebx],eax
  53:	0e                   	push   cs
  54:	0b 0b                	or     ecx,DWORD PTR [ebx]
  56:	3a 0b                	cmp    cl,BYTE PTR [ebx]
  58:	3b 0b                	cmp    ecx,DWORD PTR [ebx]
  5a:	39 0b                	cmp    DWORD PTR [ebx],ecx
  5c:	01 13                	add    DWORD PTR [ebx],edx
  5e:	00 00                	add    BYTE PTR [eax],al
  60:	09 0d 00 03 0e 3a    	or     DWORD PTR ds:0x3a0e0300,ecx
  66:	0b 3b                	or     edi,DWORD PTR [ebx]
  68:	0b 39                	or     edi,DWORD PTR [ecx]
  6a:	0b 49 13             	or     ecx,DWORD PTR [ecx+0x13]
  6d:	38 0b                	cmp    BYTE PTR [ebx],cl
  6f:	00 00                	add    BYTE PTR [eax],al
  71:	0a 16                	or     dl,BYTE PTR [esi]
  73:	00 03                	add    BYTE PTR [ebx],al
  75:	0e                   	push   cs
  76:	3a 0b                	cmp    cl,BYTE PTR [ebx]
  78:	3b 0b                	cmp    ecx,DWORD PTR [ebx]
  7a:	39 0b                	cmp    DWORD PTR [ebx],ecx
  7c:	00 00                	add    BYTE PTR [eax],al
  7e:	0b 13                	or     edx,DWORD PTR [ebx]
  80:	00 03                	add    BYTE PTR [ebx],al
  82:	0e                   	push   cs
  83:	3c 19                	cmp    al,0x19
  85:	00 00                	add    BYTE PTR [eax],al
  87:	0c 01                	or     al,0x1
  89:	01 49 13             	add    DWORD PTR [ecx+0x13],ecx
  8c:	01 13                	add    DWORD PTR [ebx],edx
  8e:	00 00                	add    BYTE PTR [eax],al
  90:	0d 21 00 49 13       	or     eax,0x13490021
  95:	2f                   	das    
  96:	0b 00                	or     eax,DWORD PTR [eax]
  98:	00 0e                	add    BYTE PTR [esi],cl
  9a:	34 00                	xor    al,0x0
  9c:	03 0e                	add    ecx,DWORD PTR [esi]
  9e:	3a 0b                	cmp    cl,BYTE PTR [ebx]
  a0:	3b 0b                	cmp    ecx,DWORD PTR [ebx]
  a2:	39 0b                	cmp    DWORD PTR [ebx],ecx
  a4:	49                   	dec    ecx
  a5:	13 3f                	adc    edi,DWORD PTR [edi]
  a7:	19 3c 19             	sbb    DWORD PTR [ecx+ebx*1],edi
  aa:	00 00                	add    BYTE PTR [eax],al
  ac:	0f 21 00             	mov    eax,db0
  af:	00 00                	add    BYTE PTR [eax],al
  b1:	10 34 00             	adc    BYTE PTR [eax+eax*1],dh
  b4:	03 08                	add    ecx,DWORD PTR [eax]
  b6:	3a 0b                	cmp    cl,BYTE PTR [ebx]
  b8:	3b 0b                	cmp    ecx,DWORD PTR [ebx]
  ba:	39 0b                	cmp    DWORD PTR [ebx],ecx
  bc:	49                   	dec    ecx
  bd:	13 3f                	adc    edi,DWORD PTR [edi]
  bf:	19 02                	sbb    DWORD PTR [edx],eax
  c1:	18 00                	sbb    BYTE PTR [eax],al
  c3:	00 11                	add    BYTE PTR [ecx],dl
  c5:	2e 01 3f             	add    DWORD PTR cs:[edi],edi
  c8:	19 03                	sbb    DWORD PTR [ebx],eax
  ca:	0e                   	push   cs
  cb:	3a 0b                	cmp    cl,BYTE PTR [ebx]
  cd:	3b 0b                	cmp    ecx,DWORD PTR [ebx]
  cf:	39 0b                	cmp    DWORD PTR [ebx],ecx
  d1:	11 01                	adc    DWORD PTR [ecx],eax
  d3:	12 06                	adc    al,BYTE PTR [esi]
  d5:	40                   	inc    eax
  d6:	18 96 42 19 01 13    	sbb    BYTE PTR [esi+0x13011942],dl
  dc:	00 00                	add    BYTE PTR [eax],al
  de:	12 34 00             	adc    dh,BYTE PTR [eax+eax*1]
  e1:	03 08                	add    ecx,DWORD PTR [eax]
  e3:	3a 0b                	cmp    cl,BYTE PTR [ebx]
  e5:	3b 0b                	cmp    ecx,DWORD PTR [ebx]
  e7:	39 0b                	cmp    DWORD PTR [ebx],ecx
  e9:	49                   	dec    ecx
  ea:	13 02                	adc    eax,DWORD PTR [edx]
  ec:	18 00                	sbb    BYTE PTR [eax],al
  ee:	00 13                	add    BYTE PTR [ebx],dl
  f0:	2e 01 3f             	add    DWORD PTR cs:[edi],edi
  f3:	19 03                	sbb    DWORD PTR [ebx],eax
  f5:	08 3a                	or     BYTE PTR [edx],bh
  f7:	0b 3b                	or     edi,DWORD PTR [ebx]
  f9:	0b 39                	or     edi,DWORD PTR [ecx]
  fb:	0b 27                	or     esp,DWORD PTR [edi]
  fd:	19 49 13             	sbb    DWORD PTR [ecx+0x13],ecx
 100:	11 01                	adc    DWORD PTR [ecx],eax
 102:	12 06                	adc    al,BYTE PTR [esi]
 104:	40                   	inc    eax
 105:	18 96 42 19 01 13    	sbb    BYTE PTR [esi+0x13011942],dl
 10b:	00 00                	add    BYTE PTR [eax],al
 10d:	14 05                	adc    al,0x5
 10f:	00 03                	add    BYTE PTR [ebx],al
 111:	08 3a                	or     BYTE PTR [edx],bh
 113:	0b 3b                	or     edi,DWORD PTR [ebx]
 115:	0b 39                	or     edi,DWORD PTR [ecx]
 117:	0b 49 13             	or     ecx,DWORD PTR [ecx+0x13]
 11a:	02 18                	add    bl,BYTE PTR [eax]
 11c:	00 00                	add    BYTE PTR [eax],al
 11e:	15 2e 01 03 08       	adc    eax,0x803012e
 123:	3a 0b                	cmp    cl,BYTE PTR [ebx]
 125:	3b 0b                	cmp    ecx,DWORD PTR [ebx]
 127:	39 0b                	cmp    DWORD PTR [ebx],ecx
 129:	27                   	daa    
 12a:	19 49 13             	sbb    DWORD PTR [ecx+0x13],ecx
 12d:	11 01                	adc    DWORD PTR [ecx],eax
 12f:	12 06                	adc    al,BYTE PTR [esi]
 131:	40                   	inc    eax
 132:	18 97 42 19 00 00    	sbb    BYTE PTR [edi+0x1942],dl
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
   0:	07                   	pop    es
   1:	01 00                	add    DWORD PTR [eax],eax
   3:	00 03                	add    BYTE PTR [ebx],al
   5:	00 ca                	add    dl,cl
   7:	00 00                	add    BYTE PTR [eax],al
   9:	00 01                	add    BYTE PTR [ecx],al
   b:	01 fb                	add    ebx,edi
   d:	0e                   	push   cs
   e:	0d 00 01 01 01       	or     eax,0x1010100
  13:	01 00                	add    DWORD PTR [eax],eax
  15:	00 00                	add    BYTE PTR [eax],al
  17:	01 00                	add    DWORD PTR [eax],eax
  19:	00 01                	add    BYTE PTR [ecx],al
  1b:	2f                   	das    
  1c:	75 73                	jne    91 <_init-0x8048f6f>
  1e:	72 2f                	jb     4f <_init-0x8048fb1>
  20:	6c                   	ins    BYTE PTR es:[edi],dx
  21:	69 62 2f 67 63 63 2f 	imul   esp,DWORD PTR [edx+0x2f],0x2f636367
  28:	78 38                	js     62 <_init-0x8048f9e>
  2a:	36 5f                	ss pop edi
  2c:	36 34 2d             	ss xor al,0x2d
  2f:	6c                   	ins    BYTE PTR es:[edi],dx
  30:	69 6e 75 78 2d 67 6e 	imul   ebp,DWORD PTR [esi+0x75],0x6e672d78
  37:	75 2f                	jne    68 <_init-0x8048f98>
  39:	39 2f                	cmp    DWORD PTR [edi],ebp
  3b:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [esi+0x63],0x6564756c
  42:	00 2f                	add    BYTE PTR [edi],ch
  44:	75 73                	jne    b9 <_init-0x8048f47>
  46:	72 2f                	jb     77 <_init-0x8048f89>
  48:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [esi+0x63],0x6564756c
  4f:	2f                   	das    
  50:	62 69 74             	bound  ebp,QWORD PTR [ecx+0x74]
  53:	73 00                	jae    55 <_init-0x8048fab>
  55:	2f                   	das    
  56:	75 73                	jne    cb <_init-0x8048f35>
  58:	72 2f                	jb     89 <_init-0x8048f77>
  5a:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [esi+0x63],0x6564756c
  61:	2f                   	das    
  62:	62 69 74             	bound  ebp,QWORD PTR [ecx+0x74]
  65:	73 2f                	jae    96 <_init-0x8048f6a>
  67:	74 79                	je     e2 <_init-0x8048f1e>
  69:	70 65                	jo     d0 <_init-0x8048f30>
  6b:	73 00                	jae    6d <_init-0x8048f93>
  6d:	2f                   	das    
  6e:	75 73                	jne    e3 <_init-0x8048f1d>
  70:	72 2f                	jb     a1 <_init-0x8048f5f>
  72:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [esi+0x63],0x6564756c
  79:	00 00                	add    BYTE PTR [eax],al
  7b:	6d                   	ins    DWORD PTR es:[edi],dx
  7c:	61                   	popa   
  7d:	69 6e 2e 63 00 00 00 	imul   ebp,DWORD PTR [esi+0x2e],0x63
  84:	00 73 74             	add    BYTE PTR [ebx+0x74],dh
  87:	64 64 65 66 2e 68 00 	fs fs gs cs pushw 0x100
  8e:	01 
  8f:	00 00                	add    BYTE PTR [eax],al
  91:	74 79                	je     10c <_init-0x8048ef4>
  93:	70 65                	jo     fa <_init-0x8048f06>
  95:	73 2e                	jae    c5 <_init-0x8048f3b>
  97:	68 00 02 00 00       	push   0x200
  9c:	73 74                	jae    112 <_init-0x8048eee>
  9e:	72 75                	jb     115 <_init-0x8048eeb>
  a0:	63 74 5f 46          	arpl   WORD PTR [edi+ebx*2+0x46],si
  a4:	49                   	dec    ecx
  a5:	4c                   	dec    esp
  a6:	45                   	inc    ebp
  a7:	2e 68 00 03 00 00    	cs push 0x300
  ad:	46                   	inc    esi
  ae:	49                   	dec    ecx
  af:	4c                   	dec    esp
  b0:	45                   	inc    ebp
  b1:	2e 68 00 03 00 00    	cs push 0x300
  b7:	73 74                	jae    12d <_init-0x8048ed3>
  b9:	64 69 6f 2e 68 00 04 	imul   ebp,DWORD PTR fs:[edi+0x2e],0x40068
  c0:	00 
  c1:	00 73 79             	add    BYTE PTR [ebx+0x79],dh
  c4:	73 5f                	jae    125 <_init-0x8048edb>
  c6:	65 72 72             	gs jb  13b <_init-0x8048ec5>
  c9:	6c                   	ins    BYTE PTR es:[edi],dx
  ca:	69 73 74 2e 68 00 02 	imul   esi,DWORD PTR [ebx+0x74],0x200682e
  d1:	00 00                	add    BYTE PTR [eax],al
  d3:	00 05 01 00 05 02    	add    BYTE PTR ds:0x2050001,al
  d9:	76 91                	jbe    6c <_init-0x8048f94>
  db:	04 08                	add    al,0x8
  dd:	17                   	pop    ss
  de:	05 0b 75 05 01       	add    eax,0x105750b
  e3:	67 31 05             	xor    DWORD PTR [di],eax
  e6:	09 75 05             	or     DWORD PTR [ebp+0x5],esi
  e9:	10 ac 05 01 3d 31 05 	adc    BYTE PTR [ebp+eax*1+0x5313d01],ch
  f0:	04 08                	add    al,0x8
  f2:	4c                   	dec    esp
  f3:	05 05 75 05 03       	add    eax,0x3057505
  f8:	ac                   	lods   al,BYTE PTR ds:[esi]
  f9:	05 06 59 05 04       	add    eax,0x4055906
  fe:	d6                   	(bad)  
  ff:	05 02 59 05 01       	add    eax,0x1055902
 104:	08 67 02             	or     BYTE PTR [edi+0x2],ah
 107:	09 00                	or     DWORD PTR [eax],eax
 109:	01 01                	add    DWORD PTR [ecx],eax

Disassembly of section .debug_str:

00000000 <.debug_str>:
   0:	5f                   	pop    edi
   1:	49                   	dec    ecx
   2:	4f                   	dec    edi
   3:	5f                   	pop    edi
   4:	62 75 66             	bound  esi,QWORD PTR [ebp+0x66]
   7:	5f                   	pop    edi
   8:	65 6e                	outs   dx,BYTE PTR gs:[esi]
   a:	64 00 5f 6f          	add    BYTE PTR fs:[edi+0x6f],bl
   e:	6c                   	ins    BYTE PTR es:[edi],dx
   f:	64 5f                	fs pop edi
  11:	6f                   	outs   dx,DWORD PTR ds:[esi]
  12:	66 66 73 65          	data16 data16 jae 7b <_init-0x8048f85>
  16:	74 00                	je     18 <_init-0x8048fe8>
  18:	73 79                	jae    93 <_init-0x8048f6d>
  1a:	73 5f                	jae    7b <_init-0x8048f85>
  1c:	6e                   	outs   dx,BYTE PTR ds:[esi]
  1d:	65 72 72             	gs jb  92 <_init-0x8048f6e>
  20:	00 5f 49             	add    BYTE PTR [edi+0x49],bl
  23:	4f                   	dec    edi
  24:	5f                   	pop    edi
  25:	73 61                	jae    88 <_init-0x8048f78>
  27:	76 65                	jbe    8e <_init-0x8048f72>
  29:	5f                   	pop    edi
  2a:	65 6e                	outs   dx,BYTE PTR gs:[esi]
  2c:	64 00 2f             	add    BYTE PTR fs:[edi],ch
  2f:	68 6f 6d 65 2f       	push   0x2f656d6f
  34:	68 79 6c 6f 2f       	push   0x2f6f6c79
  39:	57                   	push   edi
  3a:	6f                   	outs   dx,DWORD PTR ds:[esi]
  3b:	72 6b                	jb     a8 <_init-0x8048f58>
  3d:	73 70                	jae    af <_init-0x8048f51>
  3f:	61                   	popa   
  40:	63 65 2f             	arpl   WORD PTR [ebp+0x2f],sp
  43:	6d                   	ins    DWORD PTR es:[edi],dx
  44:	61                   	popa   
  45:	69 6e 2d 72 65 6c 6f 	imul   ebp,DWORD PTR [esi+0x2d],0x6f6c6572
  4c:	63 61 74             	arpl   WORD PTR [ecx+0x74],sp
  4f:	65 00 73 69          	add    BYTE PTR gs:[ebx+0x69],dh
  53:	7a 65                	jp     ba <_init-0x8048f46>
  55:	5f                   	pop    edi
  56:	74 00                	je     58 <_init-0x8048fa8>
  58:	5f                   	pop    edi
  59:	49                   	dec    ecx
  5a:	4f                   	dec    edi
  5b:	5f                   	pop    edi
  5c:	77 72                	ja     d0 <_init-0x8048f30>
  5e:	69 74 65 5f 70 74 72 	imul   esi,DWORD PTR [ebp+eiz*2+0x5f],0x727470
  65:	00 
  66:	5f                   	pop    edi
  67:	66 6c                	data16 ins BYTE PTR es:[edi],dx
  69:	61                   	popa   
  6a:	67 73 00             	addr16 jae 6d <_init-0x8048f93>
  6d:	5f                   	pop    edi
  6e:	49                   	dec    ecx
  6f:	4f                   	dec    edi
  70:	5f                   	pop    edi
  71:	62 75 66             	bound  esi,QWORD PTR [ebp+0x66]
  74:	5f                   	pop    edi
  75:	62 61 73             	bound  esp,QWORD PTR [ecx+0x73]
  78:	65 00 73 68          	add    BYTE PTR gs:[ebx+0x68],dh
  7c:	6f                   	outs   dx,DWORD PTR ds:[esi]
  7d:	72 74                	jb     f3 <_init-0x8048f0d>
  7f:	20 69 6e             	and    BYTE PTR [ecx+0x6e],ch
  82:	74 00                	je     84 <_init-0x8048f7c>
  84:	5f                   	pop    edi
  85:	6d                   	ins    DWORD PTR es:[edi],dx
  86:	61                   	popa   
  87:	72 6b                	jb     f4 <_init-0x8048f0c>
  89:	65 72 73             	gs jb  ff <_init-0x8048f01>
  8c:	00 5f 49             	add    BYTE PTR [edi+0x49],bl
  8f:	4f                   	dec    edi
  90:	5f                   	pop    edi
  91:	72 65                	jb     f8 <_init-0x8048f08>
  93:	61                   	popa   
  94:	64 5f                	fs pop edi
  96:	65 6e                	outs   dx,BYTE PTR gs:[esi]
  98:	64 00 5f 66          	add    BYTE PTR fs:[edi+0x66],bl
  9c:	72 65                	jb     103 <_init-0x8048efd>
  9e:	65 72 65             	gs jb  106 <_init-0x8048efa>
  a1:	73 5f                	jae    102 <_init-0x8048efe>
  a3:	62 75 66             	bound  esi,QWORD PTR [ebp+0x66]
  a6:	00 73 74             	add    BYTE PTR [ebx+0x74],dh
  a9:	64 65 72 72          	fs gs jb 11f <_init-0x8048ee1>
  ad:	00 6c 6f 6e          	add    BYTE PTR [edi+ebp*2+0x6e],ch
  b1:	67 20 6c 6f          	and    BYTE PTR [si+0x6f],ch
  b5:	6e                   	outs   dx,BYTE PTR ds:[esi]
  b6:	67 20 69 6e          	and    BYTE PTR [bx+di+0x6e],ch
  ba:	74 00                	je     bc <_init-0x8048f44>
  bc:	5f                   	pop    edi
  bd:	6c                   	ins    BYTE PTR es:[edi],dx
  be:	6f                   	outs   dx,DWORD PTR ds:[esi]
  bf:	63 6b 00             	arpl   WORD PTR [ebx+0x0],bp
  c2:	5f                   	pop    edi
  c3:	5f                   	pop    edi
  c4:	69 6e 74 36 34 5f 74 	imul   ebp,DWORD PTR [esi+0x74],0x745f3436
  cb:	00 5f 63             	add    BYTE PTR [edi+0x63],bl
  ce:	75 72                	jne    142 <_init-0x8048ebe>
  d0:	5f                   	pop    edi
  d1:	63 6f 6c             	arpl   WORD PTR [edi+0x6c],bp
  d4:	75 6d                	jne    143 <_init-0x8048ebd>
  d6:	6e                   	outs   dx,BYTE PTR ds:[esi]
  d7:	00 5f 76             	add    BYTE PTR [edi+0x76],bl
  da:	74 61                	je     13d <_init-0x8048ec3>
  dc:	62 6c 65 5f          	bound  ebp,QWORD PTR [ebp+eiz*2+0x5f]
  e0:	6f                   	outs   dx,DWORD PTR ds:[esi]
  e1:	66 66 73 65          	data16 data16 jae 14a <_init-0x8048eb6>
  e5:	74 00                	je     e7 <_init-0x8048f19>
  e7:	5f                   	pop    edi
  e8:	49                   	dec    ecx
  e9:	4f                   	dec    edi
  ea:	5f                   	pop    edi
  eb:	46                   	inc    esi
  ec:	49                   	dec    ecx
  ed:	4c                   	dec    esp
  ee:	45                   	inc    ebp
  ef:	00 75 6e             	add    BYTE PTR [ebp+0x6e],dh
  f2:	73 69                	jae    15d <_init-0x8048ea3>
  f4:	67 6e                	outs   dx,BYTE PTR ds:[si]
  f6:	65 64 20 63 68       	gs and BYTE PTR fs:[ebx+0x68],ah
  fb:	61                   	popa   
  fc:	72 00                	jb     fe <_init-0x8048f02>
  fe:	6c                   	ins    BYTE PTR es:[edi],dx
  ff:	6f                   	outs   dx,DWORD PTR ds:[esi]
 100:	6e                   	outs   dx,BYTE PTR ds:[esi]
 101:	67 20 6c 6f          	and    BYTE PTR [si+0x6f],ch
 105:	6e                   	outs   dx,BYTE PTR ds:[esi]
 106:	67 20 75 6e          	and    BYTE PTR [di+0x6e],dh
 10a:	73 69                	jae    175 <_init-0x8048e8b>
 10c:	67 6e                	outs   dx,BYTE PTR ds:[si]
 10e:	65 64 20 69 6e       	gs and BYTE PTR fs:[ecx+0x6e],ch
 113:	74 00                	je     115 <_init-0x8048eeb>
 115:	5f                   	pop    edi
 116:	49                   	dec    ecx
 117:	4f                   	dec    edi
 118:	5f                   	pop    edi
 119:	6d                   	ins    DWORD PTR es:[edi],dx
 11a:	61                   	popa   
 11b:	72 6b                	jb     188 <_init-0x8048e78>
 11d:	65 72 00             	gs jb  120 <_init-0x8048ee0>
 120:	5f                   	pop    edi
 121:	73 68                	jae    18b <_init-0x8048e75>
 123:	6f                   	outs   dx,DWORD PTR ds:[esi]
 124:	72 74                	jb     19a <_init-0x8048e66>
 126:	62 75 66             	bound  esi,QWORD PTR [ebp+0x66]
 129:	00 5f 49             	add    BYTE PTR [edi+0x49],bl
 12c:	4f                   	dec    edi
 12d:	5f                   	pop    edi
 12e:	77 72                	ja     1a2 <_init-0x8048e5e>
 130:	69 74 65 5f 62 61 73 	imul   esi,DWORD PTR [ebp+eiz*2+0x5f],0x65736162
 137:	65 
 138:	00 5f 75             	add    BYTE PTR [edi+0x75],bl
 13b:	6e                   	outs   dx,BYTE PTR ds:[esi]
 13c:	75 73                	jne    1b1 <_init-0x8048e4f>
 13e:	65 64 32 00          	gs xor al,BYTE PTR fs:[eax]
 142:	5f                   	pop    edi
 143:	49                   	dec    ecx
 144:	4f                   	dec    edi
 145:	5f                   	pop    edi
 146:	72 65                	jb     1ad <_init-0x8048e53>
 148:	61                   	popa   
 149:	64 5f                	fs pop edi
 14b:	70 74                	jo     1c1 <_init-0x8048e3f>
 14d:	72 00                	jb     14f <_init-0x8048eb1>
 14f:	73 68                	jae    1b9 <_init-0x8048e47>
 151:	6f                   	outs   dx,DWORD PTR ds:[esi]
 152:	72 74                	jb     1c8 <_init-0x8048e38>
 154:	20 75 6e             	and    BYTE PTR [ebp+0x6e],dh
 157:	73 69                	jae    1c2 <_init-0x8048e3e>
 159:	67 6e                	outs   dx,BYTE PTR ds:[si]
 15b:	65 64 20 69 6e       	gs and BYTE PTR fs:[ecx+0x6e],ch
 160:	74 00                	je     162 <_init-0x8048e9e>
 162:	6d                   	ins    DWORD PTR es:[edi],dx
 163:	61                   	popa   
 164:	69 6e 00 5f 66 72 65 	imul   ebp,DWORD PTR [esi+0x0],0x6572665f
 16b:	65 72 65             	gs jb  1d3 <_init-0x8048e2d>
 16e:	73 5f                	jae    1cf <_init-0x8048e31>
 170:	6c                   	ins    BYTE PTR es:[edi],dx
 171:	69 73 74 00 5f 5f 70 	imul   esi,DWORD PTR [ebx+0x74],0x705f5f00
 178:	61                   	popa   
 179:	64 35 00 5f 49 4f    	fs xor eax,0x4f495f00
 17f:	5f                   	pop    edi
 180:	63 6f 64             	arpl   WORD PTR [edi+0x64],bp
 183:	65 63 76 74          	arpl   WORD PTR gs:[esi+0x74],si
 187:	00 6d 61             	add    BYTE PTR [ebp+0x61],ch
 18a:	69 6e 2e 63 00 5f 49 	imul   ebp,DWORD PTR [esi+0x2e],0x495f0063
 191:	4f                   	dec    edi
 192:	5f                   	pop    edi
 193:	77 72                	ja     207 <_init-0x8048df9>
 195:	69 74 65 5f 65 6e 64 	imul   esi,DWORD PTR [ebp+eiz*2+0x5f],0x646e65
 19c:	00 
 19d:	5f                   	pop    edi
 19e:	5f                   	pop    edi
 19f:	6f                   	outs   dx,DWORD PTR ds:[esi]
 1a0:	66 66 36 34 5f       	data16 data16 ss xor al,0x5f
 1a5:	74 00                	je     1a7 <_init-0x8048e59>
 1a7:	5f                   	pop    edi
 1a8:	5f                   	pop    edi
 1a9:	6f                   	outs   dx,DWORD PTR ds:[esi]
 1aa:	66 66 5f             	data16 pop di
 1ad:	74 00                	je     1af <_init-0x8048e51>
 1af:	5f                   	pop    edi
 1b0:	63 68 61             	arpl   WORD PTR [eax+0x61],bp
 1b3:	69 6e 00 5f 49 4f 5f 	imul   ebp,DWORD PTR [esi+0x0],0x5f4f495f
 1ba:	77 69                	ja     225 <_init-0x8048ddb>
 1bc:	64 65 5f             	fs gs pop edi
 1bf:	64 61                	fs popa 
 1c1:	74 61                	je     224 <_init-0x8048ddc>
 1c3:	00 5f 49             	add    BYTE PTR [edi+0x49],bl
 1c6:	4f                   	dec    edi
 1c7:	5f                   	pop    edi
 1c8:	62 61 63             	bound  esp,QWORD PTR [ecx+0x63]
 1cb:	6b 75 70 5f          	imul   esi,DWORD PTR [ebp+0x70],0x5f
 1cf:	62 61 73             	bound  esp,QWORD PTR [ecx+0x73]
 1d2:	65 00 73 74          	add    BYTE PTR gs:[ebx+0x74],dh
 1d6:	64 69 6e 00 5f 66 6c 	imul   ebp,DWORD PTR fs:[esi+0x0],0x616c665f
 1dd:	61 
 1de:	67 73 32             	addr16 jae 213 <_init-0x8048ded>
 1e1:	00 5f 6d             	add    BYTE PTR [edi+0x6d],bl
 1e4:	6f                   	outs   dx,DWORD PTR ds:[esi]
 1e5:	64 65 00 5f 49       	fs add BYTE PTR gs:[edi+0x49],bl
 1ea:	4f                   	dec    edi
 1eb:	5f                   	pop    edi
 1ec:	72 65                	jb     253 <_init-0x8048dad>
 1ee:	61                   	popa   
 1ef:	64 5f                	fs pop edi
 1f1:	62 61 73             	bound  esp,QWORD PTR [ecx+0x73]
 1f4:	65 00 47 4e          	add    BYTE PTR gs:[edi+0x4e],al
 1f8:	55                   	push   ebp
 1f9:	20 43 31             	and    BYTE PTR [ebx+0x31],al
 1fc:	37                   	aaa    
 1fd:	20 39                	and    BYTE PTR [ecx],bh
 1ff:	2e 33 2e             	xor    ebp,DWORD PTR cs:[esi]
 202:	30 20                	xor    BYTE PTR [eax],ah
 204:	2d 6d 33 32 20       	sub    eax,0x2032336d
 209:	2d 6d 74 75 6e       	sub    eax,0x6e75746d
 20e:	65 3d 67 65 6e 65    	gs cmp eax,0x656e6567
 214:	72 69                	jb     27f <_init-0x8048d81>
 216:	63 20                	arpl   WORD PTR [eax],sp
 218:	2d 6d 61 72 63       	sub    eax,0x6372616d
 21d:	68 3d 69 36 38       	push   0x3836693d
 222:	36 20 2d 67 67 64 62 	and    BYTE PTR ss:0x62646767,ch
 229:	20 2d 66 6e 6f 2d    	and    BYTE PTR ds:0x2d6f6e66,ch
 22f:	70 6c                	jo     29d <_init-0x8048d63>
 231:	74 20                	je     253 <_init-0x8048dad>
 233:	2d 66 6e 6f 2d       	sub    eax,0x2d6f6e66
 238:	70 69                	jo     2a3 <_init-0x8048d5d>
 23a:	63 20                	arpl   WORD PTR [eax],sp
 23c:	2d 66 61 73 79       	sub    eax,0x79736166
 241:	6e                   	outs   dx,BYTE PTR ds:[esi]
 242:	63 68 72             	arpl   WORD PTR [eax+0x72],bp
 245:	6f                   	outs   dx,DWORD PTR ds:[esi]
 246:	6e                   	outs   dx,BYTE PTR ds:[esi]
 247:	6f                   	outs   dx,DWORD PTR ds:[esi]
 248:	75 73                	jne    2bd <_init-0x8048d43>
 24a:	2d 75 6e 77 69       	sub    eax,0x69776e75
 24f:	6e                   	outs   dx,BYTE PTR ds:[esi]
 250:	64 2d 74 61 62 6c    	fs sub eax,0x6c626174
 256:	65 73 20             	gs jae 279 <_init-0x8048d87>
 259:	2d 66 73 74 61       	sub    eax,0x61747366
 25e:	63 6b 2d             	arpl   WORD PTR [ebx+0x2d],bp
 261:	70 72                	jo     2d5 <_init-0x8048d2b>
 263:	6f                   	outs   dx,DWORD PTR ds:[esi]
 264:	74 65                	je     2cb <_init-0x8048d35>
 266:	63 74 6f 72          	arpl   WORD PTR [edi+ebp*2+0x72],si
 26a:	2d 73 74 72 6f       	sub    eax,0x6f727473
 26f:	6e                   	outs   dx,BYTE PTR ds:[esi]
 270:	67 20 2d             	and    BYTE PTR [di],ch
 273:	66 73 74             	data16 jae 2ea <_init-0x8048d16>
 276:	61                   	popa   
 277:	63 6b 2d             	arpl   WORD PTR [ebx+0x2d],bp
 27a:	63 6c 61 73          	arpl   WORD PTR [ecx+eiz*2+0x73],bp
 27e:	68 2d 70 72 6f       	push   0x6f72702d
 283:	74 65                	je     2ea <_init-0x8048d16>
 285:	63 74 69 6f          	arpl   WORD PTR [ecx+ebp*2+0x6f],si
 289:	6e                   	outs   dx,BYTE PTR ds:[esi]
 28a:	20 2d 66 63 66 2d    	and    BYTE PTR ds:0x2d666366,ch
 290:	70 72                	jo     304 <_init-0x8048cfc>
 292:	6f                   	outs   dx,DWORD PTR ds:[esi]
 293:	74 65                	je     2fa <_init-0x8048d06>
 295:	63 74 69 6f          	arpl   WORD PTR [ecx+ebp*2+0x6f],si
 299:	6e                   	outs   dx,BYTE PTR ds:[esi]
 29a:	00 5f 49             	add    BYTE PTR [edi+0x49],bl
 29d:	4f                   	dec    edi
 29e:	5f                   	pop    edi
 29f:	73 61                	jae    302 <_init-0x8048cfe>
 2a1:	76 65                	jbe    308 <_init-0x8048cf8>
 2a3:	5f                   	pop    edi
 2a4:	62 61 73             	bound  esp,QWORD PTR [ecx+0x73]
 2a7:	65 00 73 79          	add    BYTE PTR gs:[ebx+0x79],dh
 2ab:	73 5f                	jae    30c <_init-0x8048cf4>
 2ad:	65 72 72             	gs jb  322 <_init-0x8048cde>
 2b0:	6c                   	ins    BYTE PTR es:[edi],dx
 2b1:	69 73 74 00 5f 66 69 	imul   esi,DWORD PTR [ebx+0x74],0x69665f00
 2b8:	6c                   	ins    BYTE PTR es:[edi],dx
 2b9:	65 6e                	outs   dx,BYTE PTR gs:[esi]
 2bb:	6f                   	outs   dx,DWORD PTR ds:[esi]
 2bc:	00 73 74             	add    BYTE PTR [ebx+0x74],dh
 2bf:	64 6f                	outs   dx,DWORD PTR fs:[esi]
 2c1:	75 74                	jne    337 <_init-0x8048cc9>
 2c3:	00 5f 49             	add    BYTE PTR [edi+0x49],bl
 2c6:	4f                   	dec    edi
 2c7:	5f                   	pop    edi
 2c8:	6c                   	ins    BYTE PTR es:[edi],dx
 2c9:	6f                   	outs   dx,DWORD PTR ds:[esi]
 2ca:	63 6b 5f             	arpl   WORD PTR [ebx+0x5f],bp
 2cd:	74 00                	je     2cf <_init-0x8048d31>
